<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>üìù Docs: Suggest filtering out bots</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/45</link>	<description><![CDATA[We're using this action in github.com/typescript-eslint/typescript-eslint and although it works well, it takes up a _lot_ of workflow space. Since it needs to run on all comments &amp; comment edits, every time another bot such as Netlify updates a comment -which is _very often_ in auto-deploys!- the workflow runs. We filed https://github.com/typescript-eslint/typescript-eslint/issues/8205 on ourselves to disable the action on bots. <br/><br/>Can I suggest having the README.md / first-run docs for accessibility-alt-text-bot disable the workflow for bot accounts?<br/><br/>There's something funny about the default docs of an action authored in the GitHub organization causing many many more workflow GitHub Action runs to take up more of GitHub's $." ]]></description></item><item>	<title>üêõ Bug: No fallback behavior for action runs on forks</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/44</link>	<description><![CDATA[When this action runs on a fork and doesn't have permissions to fetch comments _(am I using the right terminology?)
_, we see the dreaded `Resource not accessible by integration` error. Example from https://github.com/JoshuaKGoldberg/create-typescript-app/pull/1110 -> https://github.com/JoshuaKGoldberg/create-typescript-app/actions/runs/7297169422/job/19886082551?pr=1110:<br/><br/>```plaintext<br/>Run github/accessibility-alt-text-bot@v1.4.0<br/>Run source /home/runner/work/_actions/github/accessibility-alt-text-bot/v1.4.0/queries.sh<br/>Detected bad alt text: true<br/>Event type: pr_description<br/>GraphQL: Resource not accessible by integration (addComment)
<br/>Error: Process completed with exit code 1.<br/>```<br/><br/>This is a similar issue to https://github.com/mtfoley/pr-compliance-action/issues/368 -> https://github.com/mtfoley/pr-compliance-action/pull/374.<br/><br/>Suggestion: can the bot log an informative message in the error about what it _would_ post if it could? That way, if it's not able to actually post a comment, a useful error can still be logged." ]]></description></item><item>	<title>Consider adding more lint checks to the default config</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/35</link>	<description><![CDATA[## What<br/><br/>It would be great to add the `generic-link-text` markdown-lint rule. However, the name of this GitHub action would no longer apply if we added rules that do not pertain to alt text. Consider renaming this action and adding more rules.  " ]]></description></item><item>	<title>Add workflow input that always users to customize their markdown-lint config</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/34</link>	<description><![CDATA[## What<br/><br/>Now that we are using Markdown-lint to parse descriptions and comments, we have the ability for the bot to  check against any markdown-lint. We should allow users to configure the lint rules that they want the bot to check against. <br/>" ]]></description></item><item>	<title>Update existing comment</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/31</link>	<description><![CDATA[When alt-text is added (and the flagged problem is resolved)
 the comment placed by the workflow should be removed or hidden (and marked as resolved)
 " ]]></description></item><item>	<title>Add all-contributors bot</title>	<link>https://github.com/github/accessibility-alt-text-bot/issues/22</link>	<description><![CDATA[### What<br/><br/>This repo uses all-contributors to add contributors to the bottom of the readme. It would be nice to automate this process using the  <a href="https://allcontributors.org/docs/en/bot/overview">all-contributors bot</a> 

." ]]></description></item><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Request: add a search bar to every page</title>	<link>https://github.com/github/choosealicense.com/issues/1184</link>	<description><![CDATA[It woul be great if there was a basic search bar through all the supported licenses. I prefer to view summaries of licenses on your website, so it's helpful to be able to jump to the page for a specific license.<br/><br/>Implementation options:<br/>* A basic search bar which loads a search result page is minimum<br/>* Ajax live search (i.e., autocomplete/search suggestions)
 would be a bonus, where you can jump right to the resulting page right from the autocomplete/search suggestions." ]]></description></item><item>	<title>Update or replace very old vendored version of jquery</title>	<link>https://github.com/github/choosealicense.com/issues/1139</link>	<description><![CDATA[1.11.0 is vendored, 3.7.3 is latest. < 3.5.0 has various reported XSS vulnerabilities; though I don't see how they'd be exploitable through this site, it'd be nice to be rid of the old version anyway. Or better, remove the need for jquery?<br/><br/>Thoughts or pull requests welcome." ]]></description></item><item>	<title>Is clipboard.js still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1138</link>	<description><![CDATA[Another followup to #1136 <br/><br/><br/>Standard https://caniuse.com/clipboard `copy` might be supported by every browser that matters, which might make it possible to dispense with `clipboard.js`.<br/><br/>Not certain, thoughts or PRs welcome." ]]></description></item><item>	<title>Is normalize.css still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1137</link>	<description><![CDATA[It seems maybe `normalize.css` could be tossed out as well? Many random comments along the lines of https://www.reddit.com/r/webdev/comments/10kqgju/how_relevant_is_normalize_css_in_2023/<br/><br/>_Originally posted by @mlinksva in https://github.com/github/choosealicense.com/issues/1136#issuecomment-1694110628_<br/>            " ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Slight errata for token documentation</title>	<link>https://github.com/github/docs/issues/32084</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/.github/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>(A)
 https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/refreshing-user-access-tokens#configuring-your-app-to-use-user-access-tokens-that-expire<br/>(B)
 https://docs.github.com/en/rest/apps/oauth-applications?apiVersion=2022-11-28#check-a-token<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>(A)
 The value I see for `refresh_token_expires_in` is always `15897600`, not `15811200`<br/>(B)
 The text description clearly says Basic Authentication (and this is what works for me)
 but the examples show Bearer Authentication<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Lowercase keyboard shortcuts if they're lowercase</title>	<link>https://github.com/github/docs/issues/31933</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/.github/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>- https://github.com/github/docs/blob/main/content/get-started/accessibility/keyboard-shortcuts.md<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>- [ ] DOC: use lowercase when the keyboard shortcut does not require pressing shift or capslock<br/>  - for example, https://docs.github.com/en/get-started/accessibility/keyboard-shortcuts#source-code-browsing has:<br/>    ```<br/>    T\tActivates the file finder<br/>    ```<br/>    But it is `t` that activates the file finder (which used to list all files, preventing unnecessary HTTP requests)
 not `T`, so it should read:<br/>    ```<br/>    t\tActivates the file finder<br/>    ```<br/>    because `t` is the shortcut that activates the file finder.<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Clarify \"PAT\" in the userinfo subcomponent when authenticating to repos.</title>	<link>https://github.com/github/docs/issues/31718</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/.github/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/codespaces/troubleshooting/troubleshooting-authentication-to-a-repository<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The purpose of the string \"PAT\" in the username field when using this method of authentication isn't very clear.<br/><br/>> You can clone the repository with a URL that includes the access token. Replace YOUR-VARIABLE with the name of the environment variable or secret you created.<br/>> `git clone https://PAT:$YOUR-VARIABLE@github.com/OWNER/REPO`<br/><br/>It may be assumed that the username field must be set as \"PAT\", when it can actually take any value as long as it doesn't malform the URL.<br/>There could also be confusion as to where the access token should be inserted.<br/>Replacing \"PAT\" with a less ambiguous value like \"USERNAME\" may be more appropriate.<br/><br/>### Additional information<br/>" ]]></description></item><item>	<title>Add clarity to fromJSON function for expressions in Actions</title>	<link>https://github.com/github/docs/issues/31708</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/.github/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>GitHub Actions / Learn GitHub Actions / Expressions: https://docs.github.com/en/actions/learn-github-actions/expressions<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>In the section \"Functions\", under \"fromJSON\", the section \" <a href="https://docs.github.com/en/actions/learn-github-actions/expressions#example-returning-a-json-data-type">Example returning a JSON data type</a> 

\" currently looks like this:<br/><br/>> This workflow uses `fromJSON` to convert environment variables from a string to a Boolean or integer.<br/>> <br/>> ```yaml<br/>> name: print<br/>> on: push<br/>> env:<br/>>   continue: true<br/>>   time: 3<br/>> jobs:<br/>>   job1:<br/>>     runs-on: ubuntu-latest<br/>>     steps:<br/>>       - continue-on-error: {% raw %}${{ fromJSON(env.continue)
 }}{% endraw %}<br/>>         timeout-minutes: {% raw %}${{ fromJSON(env.time)
 }}{% endraw %}<br/>>         run: echo ...<br/>> ```<br/>> <br/>> This example workflow sets environment variables: `continue` is set to a boolean value `true`, `time` is set to an integer value `3`.<br/>> <br/>> The workflow uses the `fromJSON()
` function to convert the environment variable `continue` from a string to a boolean, allowing it to determine whether to continue-on-error or not. Similarly, it converts the `time` environment variable from a string to an integer, setting the timeout for the job in minutes.<br/><br/>The paragraph right below the code block is confusing, because it implies that `continue` and `time` have non-string types, when they're really strings. Both the sentence before the code block and the last sentence make that more clear.<br/><br/>Really, the type of everything set in `env` is a string, and similar for everything set as a step output. For example, if you set a value like `myval='true'`, with literal quotes, like this<br/><br/>```sh<br/>echo \"myval='true'\" >> \"$GITHUB_OUTPUT\"<br/>```<br/><br/>and then use `fromJSON` like this:<br/><br/>```yaml<br/>${{ fromJSON(myval)
 == true }}<br/>```<br/><br/>the expression evaluates as false, because it's comparing `'true' == true`, a string to a boolean.<br/><br/>These are considered true, though:<br/><br/>```yaml<br/>${{ fromJSON(myval)
 == 'true' }}<br/>${{ myval == 'true' }}<br/>```<br/><br/>This can be very confusing when you set a boolean somewhere (but really, it's a string!)
, and then you have a condition based on that. For example:<br/><br/>```yaml<br/>      - id: set<br/>        run: |<br/>          echo \"myval=false\"  >> \"$GITHUB_OUTPUT\"<br/><br/>      - name: Conditional step<br/>        if: '!steps.set.outputs.myval'<br/>        run: echo \"I'd expect this to run\"<br/>```<br/><br/>I'd reasonably expect the conditional step to be run: `myval` is false, and I use logical NOT, so it should be true. What really happens is that I'm taking the *string* false, and a string seems to be considered truthy, so NOT a string is false, and the step gets skipped.<br/><br/>To add to the confusion, further up in the same document, at  <a href="https://docs.github.com/en/actions/learn-github-actions/expressions#operators">Operators</a> 

 it says that for equality operations, strings are coerced to `NaN` if they're' not a legal JSON number format, but according to the linked  <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN">MDN doc</a> 

, `NaN` is falsy, so `!NaN` should be true?<br/><br/>I have created a  <a href="https://github.com/bewuethr/no-v-test/blob/05dbce938ff6c2839ee5860a798b7b966666a7bc/.github/workflows/boolean.yml">workflow to test these equalities</a> 

 and better understand them ( <a href="https://github.com/bewuethr/no-v-test/actions/runs/7944591045/job/21690284216">example run</a> 

)
.<br/><br/>---<br/><br/>tl;dr<br/><br/>1. The paragraph below the code block in the \"Example returning a JSON data type\" is confusing, can it be updated to be more clear about environment values always being strings?<br/>2. Coercions should mention how different types interact with `!`, because the behaviour seems to contradict the `NaN` coercion described for equality comparisons.<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>\"Ensure entries are GitHub Orgs\" takes a long time to run, surfaces problems unrelated to changes in a given PR</title>	<link>https://github.com/github/government.github.com/issues/1265</link>	<description><![CDATA[- [ ] run \"Ensure entries are GitHub Orgs\" on all entries periodically (weekly?)
, generate issue or pr if failures occur<br/>- [ ] only check changed/added entries in given PR" ]]></description></item><item>	<title>Add additional UK Home Office organisations</title>	<link>https://github.com/github/government.github.com/issues/932</link>	<description><![CDATA[Add additional UK Home Office organisations: <br/>```<br/>    [\"UKHomeOffice\"],<br/>    [\"HO-CTO\"],<br/>    [\"UKHomeOffice-test\"],<br/>    [\"HMPO\"],<br/>    [\"Enterprise-functional-tests\"],<br/>    [\"UKHomeOffice-attic\"],<br/>    [\"technical-docs\"],<br/>    [\"HomeOffice-Automation-SSO\"],<br/>    [\"UKHomeOfficeForms\"]<br/>```" ]]></description></item><item>	<title>Specifying exception names in the overgeneral-exceptions</title>	<link>https://github.com/github/issue-metrics/issues/3</link>	<description><![CDATA[pylint: Command line or configuration file:1: UserWarning: Specifying exception names in the overgeneral-exceptions option without module name is deprecated and support for it will be removed in pylint 3.0. Use fully qualified name (maybe 'builtins.Exception' ?)
 instead." ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! üò∏ " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Remove typed-paths interface and use FilePath for everything</title>	<link>https://github.com/github/semantic/issues/673</link>	<description><![CDATA[Though FilePath is very flawed, especially on Windows, typed paths were a failed experiment. They did not actually catch any bugs; the best thing they did was expose some very weird behavior in certain functions, ones that we were unable to change (without huge renovations)
 lest command-line invocations break. There is a new FilePath type coming, one based on ShortByteString and officially blessed by a GHC working group, and we should just switch back to FilePath so that we can transition to that when possible." ]]></description></item><item>	<title>Caching</title>	<link>https://github.com/github/setup-licensed/issues/159</link>	<description><![CDATA[Have you considered caching the binary so it runs faster? This is one of the longest running steps in my actions" ]]></description></item><item>	<title>Build `x86` on Windows with the built-in tools</title>	<link>https://github.com/github/smimesign/issues/91</link>	<description><![CDATA[We build `amd64` directly: https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L89<br/><br/>But I had trouble figuring out how to build for `GOARCH=386` without errors. Right now, we use https://github.com/egor-tensin/setup-mingw to switch to 32-bit builds, which pulls down a bunch of tooling and takes a few minutes:<br/><br/>https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L90-L94<br/><br/>I can't help but feel there must still be a nice (or at least much faster)
 way to do this using the built-in tools from Actions." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Background color bug on unfocused Thunar window</title>	<link>https://github.com/ubuntu/yaru/issues/4014</link>	<description><![CDATA[If the Thunar window has focus, the colors are correct:<br/>! <a href="https://github.com/ubuntu/yaru/assets/543275/aa7d7447-9f79-4ee5-b77e-a93752c2e3d7">focus</a> 

<br/><br/>However, when the Thunar window does not have focus, the background color behind the folders/files title is incorrect (the rectangles should not be visible)
:<br/><br/>! <a href="https://github.com/ubuntu/yaru/assets/543275/97c871d5-be36-4801-980c-137a1fd878c8">nofocus</a> 

<br/><br/><br/>**Software that presents the issue**<br/><br/> - Name: Thunar<br/> - Version: 4.18.7 (Xfce 4.18)
<br/> - OS version: Debian GNU/Linux trixie/sid<br/><br/>**Yaru version**<br/><br/>```console<br/>$ apt show yaru-theme-gtk<br/>Package: yaru-theme-gtk<br/>Version: 23.04.4-1<br/>```" ]]></description></item></channel></rss>
