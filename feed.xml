<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Move from AppVeyor to GitHub Actions</title>	<link>https://github.com/github/certstore/issues/19</link>	<description><![CDATA[This file should be migrated to GitHub Actions: https://github.com/github/certstore/blob/main/.appveyor.yml" ]]></description></item><item>	<title>license yaml format issue</title>	<link>https://github.com/github/choosealicense.com/issues/758</link>	<description><![CDATA[The `using` part of the license.txt looks weird to me. It's an array of single-element map like this<br/>```yaml<br/>using:<br/>  - youtube-dl: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br/>  - kakoune: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br/>  - RDF.rb: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br/>```<br/>why not just use a single map like this<br/>```yaml<br/>using:<br/>  youtube-dl: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br/>  kakoune: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br/>  RDF.rb: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br/>```<br/>or an array of structered map<br/>```yaml<br/>using:<br/>  - name: youtube-dl<br/>    url: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br/>  - name: kakoune<br/>    url: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br/>  - name: RDF.rb<br/>    url: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br/>```<br/>It makes the deserialise code boilerplate, for e.g in Rust I have to declare this field like <br/>```Rust<br/>using: Option<Vec<HashMap<String, String>>>,<br/>```<br/>When using this `using` field, I have to iterate the vector, during which I have to iterate the single-element map!<br/>In other formats, it would be<br/>```Rust<br/>using: Option<HashMap<String, String>>,<br/>```<br/>or<br/>```Rust<br/>using: Option<Vec<SomeStruct>>,<br/>```" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Add Free Art License</title>	<link>https://github.com/github/choosealicense.com/issues/314</link>	<description><![CDATA[ <a href="http://artlibre.org/licence/lal/en/">Free Art License 1.3</a> 

<br/>" ]]></description></item><item>	<title>I18N</title>	<link>https://github.com/github/choosealicense.com/issues/68</link>	<description><![CDATA[Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62<br/><br/>We already have the bulk of the strings in a single file (`_config.yml`)
, so it should just be a matter of abstracting out some of our variables, as far as I can tell.<br/><br/>Would love to take this on starting in August if there's interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons learned form https://github.com/CMSgov/healthcare.gov.<br/><br/>@parkr any interest?<br/>@dhcole any insight / words of wisdom?<br/>" ]]></description></item><item>	<title>Support for locally present bundles</title>	<link>https://github.com/github/codeql-action/issues/154</link>	<description><![CDATA[I would like to run code-scanning with a custom code-scanning bundle<br/>that already is present on my local disk.  I can currently do that by<br/>making the following hack:<br/><br/>### 1 Install bundle in tool cache:<br/><br/>Use `toolCache.cacheDir` to install the bundle with a specially crafted ID:<br/><br/>```js<br/>tc.cacheDir(localBundlePath, 'CodeQL', \"0.0.0-XXX-DUMMY-BUNDLE-ID\")
;<br/>```<br/><br/>### 2 Convince codeql to look in the tool cache:<br/><br/>The codeql action is then invoked with a dummy URL that will make codeql.ts lookup the bundle with the specially crafted ID:<br/><br/>```yaml<br/>        ...<br/>        tools: dummy://codeql-bundle-XXX-DUMMY-BUNDLE-ID/dummy<br/>        ...<br/>```<br/><br/>---<br/><br/>This works, but I would like a more reliable solution.  I am not sure<br/>what the best approach is for supporting my use case, but I am happy<br/>to look into implementing a suggestion.<br/>" ]]></description></item><item>	<title>TODO: Configure caching for fast building on CI</title>	<link>https://github.com/github/government.github.com/issues/750</link>	<description><![CDATA[Description and details here: https://github.com/gjtorikian/html-proofer#configuring-caching and https://github.com/gjtorikian/html-proofer#caching-with-travis" ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>XML report for CI</title>	<link>https://github.com/github/licensed/issues/52</link>	<description><![CDATA[Hi,<br/><br/>I'm integrating licensed for a poc in our Jenkins pipeline. It could be great to get a report of all licenses checks in an XML formatted file; so we can process it using Jenkins plugins. For now, I have to analyse the `XXX dependencies checked, XXX warnings found.` string formatted output of `licensed status` command.<br/><br/>We can consider **licensed results** as **tests results**.<br/>* If all licenses check passed; then the overall test is **passed**.<br/>* If one license is found as unknown, or not matching any of allowed, ignored or reviewed configs; then the check/test **failed**.<br/><br/>Standards test output formats such as junit, nunit, mstest, google-test, etc. would be great cos already known by many CI tools. Junit is probably the most used one.<br/><br/>Organizing tests in \"groups\" matching the package type (npm, pip, go, etc.)
 and license type (mit, gpl...)
 would also allows to \"count\" the type of licenses found... providing some kind of statistics ^<br/><br/>Example of output in Jenkins test plugin results, processing the XML file could be:<br/>```<br/>Package                  Fail Skip Pass Total<br/>- total                     0    0   69    69<br/>- npm                       0    0   53    53<br/>  - mit                     0    0   45    45<br/>    - package1              0    0    1     1<br/>    - package 2             ...<br/>    - ...<br/>  - apache-2.0                              3<br/>    - package46<br/>    - ...<br/>  - bsd-3-clause                            1 <br/>    - package49<br/>  - isc                                     1<br/>    - package50<br/>  - unknown                                 3<br/>    - package51             1    0    0     1<br/>    - ...<br/>- go                                       16<br/>  - mit                                    14<br/>    - ...<br/>  - isc                                     1<br/>    - ...<br/>  - unknown                                 1<br/>    - packagexx             1    0    0     1<br/>    - ...<br/>```<br/>I did not fill the array; but you've got the point ;-)
<br/><br/>Regards,<br/><br/>Chris" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Consider not using LCS by default or allow switching it off</title>	<link>https://github.com/github/octocatalog-diff/issues/207</link>	<description><![CDATA[Hi,<br/><br/> <a href="https://github.com/github/octocatalog-diff/blob/master/lib/octocatalog-diff/catalog-diff/differ.rb#L525">Hashdiff</a> 

 uses  <a href="https://github.com/liufengyun/hashdiff#use_lcs">LCS by default</a> 

 when comparing arrays. This algorithm produces a friendlier and easier to read diff for humans, but at  <a href="https://github.com/liufengyun/hashdiff/issues/49">high cost</a> 

 O(n<sup>2</sup>)
.<br/><br/>Would you consider a patch to either disable LCS or perhaps to allow switching it off via the command line? I'd happy to prepare it.<br/><br/>Thanks." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Investigate semantic-rust macro tests</title>	<link>https://github.com/github/semantic/issues/553</link>	<description><![CDATA[@p-alik has graciously added the `semantic-rust` package but we've had to exclude some macro corpus tests due to parsing issues.<br/><br/>See https://github.com/github/semantic/pull/551 for details." ]]></description></item><item>	<title>R support</title>	<link>https://github.com/github/semantic/issues/382</link>	<description><![CDATA[R is a  <a href="https://stackoverflow.blog/2017/10/10/impressive-growth-r/">widely used</a> 

, growing language often used in Data Science and Statistics.<br/><br/>While it does not have a published formal specification, there is a  <a href="https://cran.r-project.org/doc/manuals/r-release/R-lang.pdf">draft specification</a> 

 that describes lexing and parsing the language.<br/><br/>In the most  <a href="https://github.com/wch/r-source">widely used implementation</a> 

 the parsing is done with a bison parser defined in  <a href="https://github.com/wch/r-source/blob/ff1bca2f21aba271d428474f00494eece5c36dd3/src/main/gram.y">gram.y</a> 

.<br/><br/>The lexing rules for R are somewhat complex, but the parsing is relatively straightforward, as generally everything is an expression.<br/><br/>It would very beneficial to the R community to have support for R in semantic!" ]]></description></item><item>	<title>Move from Travis CI and Appveyor to GitHub Actions</title>	<link>https://github.com/github/smimesign/issues/71</link>	<description><![CDATA[The following files are historical artifacts:<br/><br/>- Travis CI for macOS builds: https://github.com/github/smimesign/blob/main/.travis.yml<br/>- AppVeyor for Windows builds: https://github.com/github/smimesign/blob/main/.appveyor.yml<br/><br/>In fact, the macOS build doesn't upload releases anymore.<br/><br/>Both of these should be moved to GitHub Actions. I have a test branch for macOS at:<br/>https://github.com/github/smimesign/tree/macos-build<br/><br/>This is not a high priority for us, but if someone took the time to migrate and debug the CI files for GH Actions it would help us maintain this project!" ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>Scala Support</title>	<link>https://github.com/github/super-linter/issues/392</link>	<description><![CDATA[Scala linter support.<br/><br/>Choices are<br/>-  <a href="https://github.com/scalacenter/scalafix">scalafix</a> 

<br/>-  <a href="https://github.com/scalameta/scalafmt">scalafmt</a> 

<br/>-  <a href="https://github.com/scalastyle/scalastyle">scalastyle</a> 

<br/>-  <a href="https://github.com/wartremover/wartremover">wartremover</a> 

" ]]></description></item><item>	<title>Make previews controller extensible </title>	<link>https://github.com/github/view_component/issues/434</link>	<description><![CDATA[## Feature request<br/><!-- Provide a summary of the behavior. --><br/>Make the previews controller to be extensible by allowing users to add authentication, authorization, before actions, or anything that the end user would need to meet their needs. <br/><br/>### Motivation<br/>It all started in discussion #412 <br/>@jonspalmer came up with a good suggestion, which is to copy Devise's \"parent class\" feature. It will enable devs to set up a parent class if needed. <br/><br/>https://github.com/github/view_component/discussions/412#discussioncomment-41084<br/><!-- What would you like to do with this feature? Can you provide<br/>context or references to similar behavior in other libraries? --><br/>" ]]></description></item><item>	<title>ActiveSupport::Notifications instrumentation</title>	<link>https://github.com/github/view_component/issues/427</link>	<description><![CDATA[## Feature request<br/>Have `ActiveSupport::Notifications` instrumentation.<br/><br/>### Motivation<br/><br/>It may be nice to have some information about time used to render the component. Like `ActionView` does in developer server logs.<br/><br/>Examples:<br/>- simple component rendering `Rendered ButtonComponent (Duration: 1.2ms | Allocations: 123)
`<br/>- collection rendering `Rendered collection of ButtonComponent [10 times] (Duration: 1.2ms | Allocations: 123)
`<br/><br/>```<br/>Started GET \"/posts/aa147930-7749-4d52-a44b-29548e093447/edit\" for 127.0.0.1 at 2020-07-29 01:09:19 +0200<br/>Processing by PostsController#edit as HTML<br/>  Parameters: {\"id\"=>\"aa147930-7749-4d52-a44b-29548e093447\"}<br/>  Post Load (2.0ms)
  SELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"id\" = $1 LIMIT $2  [[\"id\", \"aa147930-7749-4d52-a44b-29548e093447\"], [\"LIMIT\", 1]]<br/>  ↳ app/controllers/posts_controller.rb:51:in `set_post'<br/>  Rendering posts/edit.html.slim within layouts/application<br/>  Rendered ButtonComponent (Duration: 1.2ms | Allocations: 123)
<br/>  Rendered posts/_form.html.slim (Duration: 6.3ms | Allocations: 3331)
<br/>  Rendered posts/edit.html.slim within layouts/application (Duration: 9.4ms | Allocations: 5561)
<br/>Completed 200 OK in 46ms (Views: 26.1ms | ActiveRecord: 2.3ms | Allocations: 19197)
<br/>```<br/>" ]]></description></item><item>	<title>Access request within SlotComponent instance</title>	<link>https://github.com/github/view_component/issues/409</link>	<description><![CDATA[## Feature request<br/>https://github.com/github/view_component/pull/59 added context and access to the request object within the component, however this does not seem to extend to SlotComponent.<br/>I would like to propose this change to SlotComponents also <br/><br/>### Motivation<br/><br/>I would like to use an active nav anchor tag in a NavItem slot within a NavBarComponent, by using the request to determine the `current_page?` Currently I having to work around this by wrapping the SlotComponent instance in a method in the parent Component and calling the method from the template.<br/>To me the SlotComponents should have access to the same helpers and view context that the parent components currently provide.<br/><br/>I will attempt a PR of this myself if there's acceptance and motivation to do so. " ]]></description></item><item>	<title>Add failing tests for rendering with layouts</title>	<link>https://github.com/github/view_component/pull/395</link>	<description><![CDATA[<!-- See https://github.com/github/view_component/blob/master/CONTRIBUTING.md#submitting-a-pull-request  --><br/><br/>### Summary<br/><br/><!-- Provide a general description of the code changes in your pull<br/>request... were there any bugs you had fixed? If so, mention them. If<br/>these bugs have open GitHub issues, be sure to tag them here as well,<br/>to keep the conversation linked together. --><br/>This is a merge request for discussing a possible API for implementing #391 <br/><br/>I would have liked to have layouts included by default with `render`. I would understand if that is deemed an API break and a alternative needs to be determined.<br/><br/>Additionally, I have added a test that checks the view context is shared between the layout and the component.<br/><br/>### Other Information<br/><br/><!-- If there's anything else that's important and relevant to your pull<br/>request, mention that information here. This could include<br/>benchmarks, or other information.<br/><br/>If you are updating any of the CHANGELOG files or are asked to update the<br/>CHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file. --><br/>" ]]></description></item><item>	<title>Support multiple views</title>	<link>https://github.com/github/view_component/issues/387</link>	<description><![CDATA[## Feature request<br/><!-- Provide a summary of the behavior. --><br/><br/>Allow refactoring small view parts into a separate view, and be able to `render` them into the template. These views should not be available outside the component.<br/><br/>```<br/>app/components/my_component/my_component.html.erb<br/>app/components/my_component/a_part.html.erb<br/>```<br/><br/>```erb<br/><%# my_component.html.erb %><br/><%= render 'a_part' %><br/>```<br/><br/>### Motivation<br/><br/><!-- What would you like to do with this feature? Can you provide<br/>context or references to similar behavior in other libraries? --><br/><br/>Sometimes it is useful to separate a sub-component from the component. For example, if I want to render a popover with extra info about a particular model, I would want to extract that popover into a separate view. <br/><br/>Alternative Solutions:<br/><br/>1. Extract a new component. Because the popover is not a generic one to be used in other parts of the application, it doesn't make much sense to create a (now public)
 component for it.<br/>2. Use `content_for`. This is not suitable if the partial needs to take arguments. In my example, it wouldn't work if I'm displaying a list of models and I want to show the popover for each model.<br/><br/>Prior art:<br/>ActionView does support partials, of course.<br/>Cells does allow multiple views per cell, and allows using `render view: 'a_part'`.<br/><br/>### Possible solutions I see<br/><br/>1. Provide a method that prefixes the component dir and then goes on to call `render template: ` with the full path. I would suspect this is relatively slow given that `render` is slow in ActionView. <br/>2. Precompile all the templates into methods with a reserved prefix, and allow calling them from the view. For example, using `extra_views_{view_name}`.<br/><br/>" ]]></description></item><item>	<title>Fix rendering of components that utilize `capture` in a parent view context</title>	<link>https://github.com/github/view_component/pull/240</link>	<description><![CDATA[In Rails, when you create a form it saves a reference to the current<br/>template object that is rendering the form. When you render a form<br/>builder helper method, like `form.label` inside of a child component the<br/>template object will be the original template object from where the form<br/>builder was instantiated.<br/><br/>This means in cases where we pass a block to a form builder helper the<br/>`@output_buffer` is the parent component's output buffer. So when that<br/>buffer is overridden via `.capture` it's setting the parent component's<br/>`@output_buffer` to a new, temporary buffer but it doesn't change the<br/>child component that is actually rendering's `@output_buffer`. This<br/>means the block is executed in the context of the child components<br/>actual `@output_buffer` and immediately writes to the buffer. Since<br/>`capture` had nothing written to the temporary buffer, it returns the<br/>value of the block call and then inserts that into the parent<br/>component's `@output_buffer`.<br/><br/>This resolves the issue by monkey patching `ActionView::Base` to support<br/>a new `child_component` attribute and overriding `output_buffer=` to set<br/>its `child_component`s output_buffer to whatever `output_buffer` is set<br/>to. With that in place, when `capture` is called, then #output_buffer=`<br/>is called which will update the child component's output buffer to the new <br/>temporary buffer correctly." ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Add Racket support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/200</link>	<description><![CDATA[It would be nice if support for Racket and DrRacket would be added. Please consider it, thx :smile: <br/>http://racket-lang.org/<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Add: Lazarus IDE and FPC</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/149</link>	<description><![CDATA[Please, add this great RAD solution. It can compile to different targets and architectures.<br/>The version provided in the USC it is old and conflicts with new versions.<br/>http://www.lazarus-ide.org/<br/>" ]]></description></item><item>	<title>Support for Mono and Mono Develop</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/94</link>	<description><![CDATA[It would be nice if support for Mono and Mono Develop would be added. Please consider it :)
<br/>" ]]></description></item><item>	<title>Add Perl support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/85</link>	<description><![CDATA[Please also add Perl support via perlbrew/plenv and Padre as IDE.<br/>" ]]></description></item><item>	<title>OSD level scale invisible</title>	<link>https://github.com/ubuntu/yaru/issues/2214</link>	<description><![CDATA[Hi there, first of all, thanks for this very nice theme.<br/><br/>I'm using Yaru 20.04 on openSUSE Tumbleweed and Leap 15.2 with Mate 1.24.0. There is a problem where the OSD horizontal fine-grained level/scale is invisible. Maybe some code could be borrowed from Numix, as it looks perfect under Numix.<br/><br/>--------------<br/><br/>Yaru (light and normal all behave the same)
:<br/><br/>! <a href="https://user-images.githubusercontent.com/2692138/85305326-880c4b80-b472-11ea-8d15-98d63fb4b3c6.png">Screenshot at 2020-06-22 10-14-21</a> 

<br/><br/>---------------------<br/><br/>Numix:<br/><br/>! <a href="https://user-images.githubusercontent.com/2692138/85305349-90fd1d00-b472-11ea-9db7-e0e1611c0b26.png">Screenshot at 2020-06-22 10-14-35</a> 

<br/>" ]]></description></item><item>	<title>Make Yaru compatible with budgie-panel</title>	<link>https://github.com/ubuntu/yaru/issues/2078</link>	<description><![CDATA[At the current state, using Yaru in budgie panel is almost unreadable. Is it possible to make a budgie-panel theme for Yaru? <br/><br/>! <a href="https://user-images.githubusercontent.com/38846168/76770522-d7a8f000-677c-11ea-934d-6db9132a32c9.png">Screenshot from 2020-03-16 11-53-05</a> 

<br/>" ]]></description></item><item>	<title>[Bionic] Check mark (✓)
 is invisible in Firefox context menu</title>	<link>https://github.com/ubuntu/yaru/issues/2064</link>	<description><![CDATA[### Steps to see the issue<br/>1. Open Firefox and go to a text field<br/>2. Right-click in a text field and select \"Check Spelling\"<br/>3. You should see a check mark (✓)
 beside \"Check Spelling\"<br/>4. The check mark is invisible<br/><br/>### Software that presents the issue<br/>- OS: Ubuntu 18.04<br/>- App: Firefox<br/>- Version: 74<br/><br/>### Yaru version<br/>$ snap info communitheme<br/>snap-id:      Yd6CISPIf6tEf3ZEJ0cqSoEg9rG2VkRi<br/>tracking:     latest/edge<br/>refresh-date: 11 days ago, at 19:12 CET<br/>channels:<br/>  stable:    0.1    2019-03-13 (1768)
 16MB -<br/>  candidate: ↑                             <br/>  beta:      ↑                             <br/>  edge:      29.180 2020-03-03 (1970)
 18MB -<br/>installed:   29.180            (1970)
 18MB -<br/>" ]]></description></item></channel></rss>
