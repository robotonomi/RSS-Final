<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Move from AppVeyor to GitHub Actions</title>	<link>https://github.com/github/certstore/issues/19</link>	<description><![CDATA[This file should be migrated to GitHub Actions: https://github.com/github/certstore/blob/main/.appveyor.yml" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Add Free Art License</title>	<link>https://github.com/github/choosealicense.com/issues/314</link>	<description><![CDATA[ <a href="http://artlibre.org/licence/lal/en/">Free Art License 1.3</a> 

<br/>" ]]></description></item><item>	<title>I18N</title>	<link>https://github.com/github/choosealicense.com/issues/68</link>	<description><![CDATA[Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62<br/><br/>We already have the bulk of the strings in a single file (`_config.yml`)
, so it should just be a matter of abstracting out some of our variables, as far as I can tell.<br/><br/>Would love to take this on starting in August if there's interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons learned form https://github.com/CMSgov/healthcare.gov.<br/><br/>@parkr any interest?<br/>@dhcole any insight / words of wisdom?<br/>" ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>XML report for CI</title>	<link>https://github.com/github/licensed/issues/52</link>	<description><![CDATA[Hi,<br/><br/>I'm integrating licensed for a poc in our Jenkins pipeline. It could be great to get a report of all licenses checks in an XML formatted file; so we can process it using Jenkins plugins. For now, I have to analyse the `XXX dependencies checked, XXX warnings found.` string formatted output of `licensed status` command.<br/><br/>We can consider **licensed results** as **tests results**.<br/>* If all licenses check passed; then the overall test is **passed**.<br/>* If one license is found as unknown, or not matching any of allowed, ignored or reviewed configs; then the check/test **failed**.<br/><br/>Standards test output formats such as junit, nunit, mstest, google-test, etc. would be great cos already known by many CI tools. Junit is probably the most used one.<br/><br/>Organizing tests in \"groups\" matching the package type (npm, pip, go, etc.)
 and license type (mit, gpl...)
 would also allows to \"count\" the type of licenses found... providing some kind of statistics ^<br/><br/>Example of output in Jenkins test plugin results, processing the XML file could be:<br/>```<br/>Package                  Fail Skip Pass Total<br/>- total                     0    0   69    69<br/>- npm                       0    0   53    53<br/>  - mit                     0    0   45    45<br/>    - package1              0    0    1     1<br/>    - package 2             ...<br/>    - ...<br/>  - apache-2.0                              3<br/>    - package46<br/>    - ...<br/>  - bsd-3-clause                            1 <br/>    - package49<br/>  - isc                                     1<br/>    - package50<br/>  - unknown                                 3<br/>    - package51             1    0    0     1<br/>    - ...<br/>- go                                       16<br/>  - mit                                    14<br/>    - ...<br/>  - isc                                     1<br/>    - ...<br/>  - unknown                                 1<br/>    - packagexx             1    0    0     1<br/>    - ...<br/>```<br/>I did not fill the array; but you've got the point ;-)
<br/><br/>Regards,<br/><br/>Chris" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! ðŸ˜¸ " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Investigate semantic-rust macro tests</title>	<link>https://github.com/github/semantic/issues/553</link>	<description><![CDATA[@p-alik has graciously added the `semantic-rust` package but we've had to exclude some macro corpus tests due to parsing issues.<br/><br/>See https://github.com/github/semantic/pull/551 for details." ]]></description></item><item>	<title>R support</title>	<link>https://github.com/github/semantic/issues/382</link>	<description><![CDATA[R is a  <a href="https://stackoverflow.blog/2017/10/10/impressive-growth-r/">widely used</a> 

, growing language often used in Data Science and Statistics.<br/><br/>While it does not have a published formal specification, there is a  <a href="https://cran.r-project.org/doc/manuals/r-release/R-lang.pdf">draft specification</a> 

 that describes lexing and parsing the language.<br/><br/>In the most  <a href="https://github.com/wch/r-source">widely used implementation</a> 

 the parsing is done with a bison parser defined in  <a href="https://github.com/wch/r-source/blob/ff1bca2f21aba271d428474f00494eece5c36dd3/src/main/gram.y">gram.y</a> 

.<br/><br/>The lexing rules for R are somewhat complex, but the parsing is relatively straightforward, as generally everything is an expression.<br/><br/>It would very beneficial to the R community to have support for R in semantic!" ]]></description></item><item>	<title>Move from Travis CI and Appveyor to GitHub Actions</title>	<link>https://github.com/github/smimesign/issues/71</link>	<description><![CDATA[The following files are historical artifacts:<br/><br/>- Travis CI for macOS builds: https://github.com/github/smimesign/blob/main/.travis.yml<br/>- AppVeyor for Windows builds: https://github.com/github/smimesign/blob/main/.appveyor.yml<br/><br/>In fact, the macOS build doesn't upload releases anymore.<br/><br/>Both of these should be moved to GitHub Actions. I have a test branch for macOS at:<br/>https://github.com/github/smimesign/tree/macos-build<br/><br/>This is not a high priority for us, but if someone took the time to migrate and debug the CI files for GH Actions it would help us maintain this project!" ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>Bump ansible-lint from 4.3.7 to 5.0.0 in /dependencies</title>	<link>https://github.com/github/super-linter/pull/1200</link>	<description><![CDATA[Bumps  <a href="https://github.com/ansible-community/ansible-lint">ansible-lint</a> 

 from 4.3.7 to 5.0.0.<br/><details><br/><summary>Release notes</summary><br/><p><em>Sourced from <a href=\"https://github.com/ansible-community/ansible-lint/releases\">ansible-lint's releases</a>.</em></p><br/><blockquote><br/><h2>v5.0.0</h2><br/><h2>Changes</h2><br/><p>This is a major new version that will surely break for users that have custom rules.  It will also require most users to update the way they install the linter as they now need to mention which version of Ansible they want to use it with.</p><br/><p>For guidance regarding upgrading please <a href=\"https://ansible-lint.readthedocs.io/en/latest/\">read the docs</a> and consult <a href=\"https://github.com/ansible-community/ansible-lint/discussions/1150\">https://github.com/ansible-community/ansible-lint/discussions/1150</a></p><br/><p>Please note that the changes listed before do not contain those from the pre-releases made since last stable release, read all.</p><br/><h2>Minor Changes</h2><br/><ul><br/><li>Allow mocking of galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1320\">#1320</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock roles from within collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1318\">#1318</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add offline mode for skipping requirements installation (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1319\">#1319</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock modules from collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1316\">#1316</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add codeclimate formatter (json)
 (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1308\">#1308</a>)
 <a href=\"https://github.com/thushjandan\"><code>@thushjandan</code></a></li><br/><li>Make all rule identifiers text based (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1306\">#1306</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Drop E suffix  when printing rule id (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1305\">#1305</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add optional rule to check for loop var prefix (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1303\">#1303</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1304\">#1304</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Recurse inside given folders (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1302\">#1302</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/></ul><br/><h2>Bugfixes</h2><br/><ul><br/><li>Avoid role-name errors with galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1321\">#1321</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Avoid false positives with literal-compare (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1315\">#1315</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Fix exclude_paths regression (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1313\">#1313</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Avoid exceptions post syntax errors (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1310\">#1310</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>E206: Avoid false positives with multilines (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1300\">#1300</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/></ul><br/><h2>v5.0.0a3</h2><br/><h2>Changes</h2><br/><h2>Minor Changes</h2><br/><ul><br/><li>Allow mocking of galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1320\">#1320</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock roles from within collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1318\">#1318</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add offline mode for skipping requirements installation (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1319\">#1319</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock modules from collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1316\">#1316</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add codeclimate formatter (json)
 (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1308\">#1308</a>)
 <a href=\"https://github.com/thushjandan\"><code>@thushjandan</code></a></li><br/><li>Make all rule identifiers text based (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1306\">#1306</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Drop E suffix  when printing rule id (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1305\">#1305</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add optional rule to check for loop var prefix (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1303\">#1303</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Add ability to mock roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1304\">#1304</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Recurse inside given folders (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1302\">#1302</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/></ul><br/><h2>Bugfixes</h2><br/><ul><br/><li>Avoid role-name errors with galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1321\">#1321</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/><li>Avoid false positives with literal-compare (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1315\">#1315</a>)
 <a href=\"https://github.com/ssbarnea\"><code>@ssbarnea</code></a></li><br/></ul><br/><!-- raw HTML omitted --><br/></blockquote><br/><p>... (truncated)
</p><br/></details><br/><details><br/><summary>Commits</summary><br/><ul><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/2bc403e7b95e0003dfadaabdfa4e48f65db1e5f8\"><code>2bc403e</code></a> Assure we publish tags (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1324\">#1324</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/9a4946e5adf054a1593458e068f365be9c5bbf5e\"><code>9a4946e</code></a> Assure we publish tags</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/e1a960aa91db68faf9c88d5bd692d9c78f8ab7c8\"><code>e1a960a</code></a> Cleanup release tagging rules (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1322\">#1322</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/e9dba0e8b7bb2a4f3c5b9f06afc6265d1ec935cf\"><code>e9dba0e</code></a> Avoid role-name errors with galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1321\">#1321</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/c546e9a75cdd4a8c0811dddd09f4424d8daab89f\"><code>c546e9a</code></a> Allow mocking of galaxy roles (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1320\">#1320</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/2e9ee83ddb99ec5aa26cc4ccfa915fe8b8c48d68\"><code>2e9ee83</code></a> Add ability to mock roles from within collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1318\">#1318</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/f574c935ad1bc3a39226c48a388f4b0a4f209634\"><code>f574c93</code></a> Add offline mode for skipping requirements installation (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1319\">#1319</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/87a9b875c4a7ab327c134ca0e69babbff3cc87b5\"><code>87a9b87</code></a> Add ability to mock modules from collections (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1316\">#1316</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/43788ce04f5364026f12faaeb07bd34c2836b7cb\"><code>43788ce</code></a> Avoid false positives with literal-compare (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1315\">#1315</a>)
</li><br/><li><a href=\"https://github.com/ansible-community/ansible-lint/commit/33b1ee883c8cb3042773182cf0d1d771c4b377ce\"><code>33b1ee8</code></a> More complexity reduction (<a href=\"https://github-redirect.dependabot.com/ansible-community/ansible-lint/issues/1314\">#1314</a>)
</li><br/><li>Additional commits viewable in <a href=\"https://github.com/ansible-community/ansible-lint/compare/v4.3.7...v5.0.0\">compare view</a></li><br/></ul><br/></details><br/><br /><br/><br/><br/>[! <a href="https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ansible-lint&amp;package-manager=pip&amp;previous-version=4.3.7&amp;new-version=5.0.0">Dependabot compatibility score</a> 

](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)
<br/><br/>Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.<br/><br/>[//]: # (dependabot-automerge-start)
<br/>[//]: # (dependabot-automerge-end)
<br/><br/>---<br/><br/><details><br/><summary>Dependabot commands and options</summary><br/><br /><br/><br/>You can trigger Dependabot actions by commenting on this PR:<br/>- `@dependabot rebase` will rebase this PR<br/>- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it<br/>- `@dependabot merge` will merge this PR after your CI passes on it<br/>- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it<br/>- `@dependabot cancel merge` will cancel a previously requested merge and block automerging<br/>- `@dependabot reopen` will reopen this PR if it is closed<br/>- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually<br/>- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
<br/>- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
<br/>- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
<br/><br/><br/></details>" ]]></description></item><item>	<title>Super-linter algorithm for finding changed files is broken</title>	<link>https://github.com/github/super-linter/issues/1167</link>	<description><![CDATA[## Describe the bug<br/><br/>`git diff-tree` used by linter on `push` checks only files from the last commit and regardless of files status, so deleted or renamed files are also checked.  <br/><br/>There are now 2 different `git` commands used for finding the list of broken files (find them here: https://github.com/github/super-linter/blob/v3.14.4/lib/functions/buildFileList.sh#L59-L105)
. `git diff-tree` is used on `push`, `git diff` is used otherwise. A separate behaviour for push was added in #905 and follow-up #1049 to fix push to a default branch. But it seems working only in rare special cases: only one commit is pushed and no files are deleted. Otherwise wrong list is reported.<br/><br/>## Expected behavior<br/><br/>All changed non-deleted files from all commits added on top of the default branch should be checked, deleted files should be ignored.<br/><br/>## Steps to Reproduce<br/><br/>Here are the steps to reproduce within git (super-linter is not involved.<br/><br/>Adding first file, everything works fine:<br/>```bash<br/>+ git log --oneline master...465e71b<br/>465e71b (HEAD -> test)
 Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 465e71b<br/>test/test1.txt<br/><br/>+ git diff --name-only master...465e71b --diff-filter=d<br/>test/test1.txt<br/>```<br/><br/>Now adding the second file in a separate commit, `diff git-tree` reports only the last file - only files changed in the last commit:<br/>```bash<br/>+ git log --oneline master...1c3d652<br/>1c3d652 (HEAD -> test)
 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 1c3d652<br/>test/test2.txt<br/><br/>+ git diff --name-only master...1c3d652 --diff-filter=d<br/>test/test1.txt<br/>test/test2.txt<br/>```<br/><br/>Renaming first file, `git diff-tree` reports again only files from the last commit and as another issue - reports deleted file as well:<br/>```bash<br/>+ git log --oneline master...f5617a2<br/>f5617a2 (HEAD -> test)
 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r f5617a2<br/>test/test1.txt<br/>test/test3.txt<br/><br/>+ git diff --name-only master...f5617a2 --diff-filter=d<br/>test/test2.txt<br/>test/test3.txt<br/>```<br/><br/>Now deleting the second file, `git diff-tree` reports only this deleted file:<br/>```shell<br/>+ git log --oneline master...ee90eaf<br/>ee90eaf (HEAD -> test)
 Remove test2.txt<br/>f5617a2 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r ee90eaf<br/>test/test2.txt<br/><br/>+ git diff --name-only master...ee90eaf --diff-filter=d<br/>test/test3.txt<br/>```<br/><br/>## Additional context<br/><br/>Right now `git diff` command looks better for all cases except finding changes for a push to a `DEFAULT_BRANCH` (the case described in #900)
. I'd say `git diff` should be used instead of the other command, or `git diff-tree` needs to be called with a right list of parameters. <br/><br/>I don't have suggestions on how better to fix the original issue from #900. If there needs to be a special code condition for that case maybe it should be checking not only git `push` event but also if current branch is a `DEFAULT_BRANCH`. <br/><br/>This project really needs testing for the \"get diff files list\" behaviour. It was broken couple of times already. Having wrong files checked is really disappointing. What makes it even more disappointing is that you often don't even realize this. With current broken behaviour wrong files were linted in the last 3 months when `push` event was used. I believe that's quite a lot of people and projects since this setup is recommended by super-linter readme :cry: <br/><br/>Additional tough thing is that it's impossible to debug \"get diff files list\" in local, since `VALIDATE_ALL_CODEBASE=true` behaviour is used in that case. " ]]></description></item><item>	<title>microk8s group permissions require reboot, not \"next login\"</title>	<link>https://github.com/ubuntu/microk8s/issues/2011</link>	<description><![CDATA[When the user has insufficient permissions to access microk8s, they get asked to run two commands and told \"The new group will be available on **the user's next login**.\"<br/><br/>https://github.com/ubuntu/microk8s/blob/cb487d8e4363c15462eb0c7dc28f780c0dd2a6a5/microk8s-resources/actions/common/utils.sh#L6-L12<br/><br/>This implies that logging out and in again will solve the issue after running those commands. This is not the case, however. A reboot is required. I just tested this on my standard Ubuntu 20.04 Desktop after installing microk8s for the first time.<br/><br/> <a href="https://github.com/ubuntu/microk8s/files/5982598/inspection-report-20210215_164323.tar.gz">inspection-report-20210215_164323.tar.gz</a> 

<br/><br/><br/><br/>" ]]></description></item><item>	<title>Disabling ha-cluster addon deletes all data</title>	<link>https://github.com/ubuntu/microk8s/issues/2009</link>	<description><![CDATA[Starting point: a default, single-node microk8s installation (`snap install microk8s --classic --channel=1.19`)
 with several deployments installed through GitLab integration, including database pods with persistent volumes (`storage` addon)
.<br/><br/>Running `microk8s disable ha-cluster` deletes all deployments, all services, all pods, and all persistent volumes _without any warning_. Everything is gone and I am left with an empty node/cluster. This was completely unexpected and you can imagine my horror. Re-enabling the addon `microk8s enable ha-cluster` does **not** bring back the data and services, the cluster remains empty :cry: <br/><br/>There should be a safety question presented to the users to confirm that they are about to destroy their data on the single-node cluster irreversibly. Disabling high-availibility does not imply deleting data, this should be communicated to the users _before_ executing the action. I assume the same happens when disabling the `storage` addon, but there it is at least somewhat obvious that this could cause data-loss." ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Add Racket support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/200</link>	<description><![CDATA[It would be nice if support for Racket and DrRacket would be added. Please consider it, thx :smile: <br/>http://racket-lang.org/<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Add: Lazarus IDE and FPC</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/149</link>	<description><![CDATA[Please, add this great RAD solution. It can compile to different targets and architectures.<br/>The version provided in the USC it is old and conflicts with new versions.<br/>http://www.lazarus-ide.org/<br/>" ]]></description></item><item>	<title>Support for Mono and Mono Develop</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/94</link>	<description><![CDATA[It would be nice if support for Mono and Mono Develop would be added. Please consider it :)
<br/>" ]]></description></item><item>	<title>Add Perl support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/85</link>	<description><![CDATA[Please also add Perl support via perlbrew/plenv and Padre as IDE.<br/>" ]]></description></item><item>	<title>Sailfish and Tizen Support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/63</link>	<description><![CDATA[Both sailfish Os and Tizen recommends developers to install sdk on ubuntu. Adding ubuntu make support will be worth it.<br/>" ]]></description></item></channel></rss>
