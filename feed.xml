<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Update or replace very old vendored version of jquery</title>	<link>https://github.com/github/choosealicense.com/issues/1139</link>	<description><![CDATA[1.11.0 is vendored, 3.7.3 is latest. < 3.5.0 has various reported XSS vulnerabilities; though I don't see how they'd be exploitable through this site, it'd be nice to be rid of the old version anyway. Or better, remove the need for jquery?<br/><br/>Thoughts or pull requests welcome." ]]></description></item><item>	<title>Is clipboard.js still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1138</link>	<description><![CDATA[Another followup to #1136 <br/><br/><br/>Standard https://caniuse.com/clipboard `copy` might be supported by every browser that matters, which might make it possible to dispense with `clipboard.js`.<br/><br/>Not certain, thoughts or PRs welcome." ]]></description></item><item>	<title>Is normalize.css still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1137</link>	<description><![CDATA[It seems maybe `normalize.css` could be tossed out as well? Many random comments along the lines of https://www.reddit.com/r/webdev/comments/10kqgju/how_relevant_is_normalize_css_in_2023/<br/><br/>_Originally posted by @mlinksva in https://github.com/github/choosealicense.com/issues/1136#issuecomment-1694110628_<br/>            " ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Suggest using `gh cache` instead of `gh actions-cache`</title>	<link>https://github.com/github/docs/issues/28748</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#managing-caches<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The article suggests installing the `gh-actions-cache` extension for the GitHub CLI. However, recent versions of the GitHub CLI have the `gh cache` extension (https://github.com/cli/cli/pull/7403)
, which can be used instead installing the extension. Currently, the extension seems a bit out of date ( <a href="https://github.com/actions/gh-actions-cache/issues/77">it appears to have trouble with the CLI's new token storage</a> 

)
, so it's probably best to use the `gh cache` subcommand instead of the `gh actions-cache` extension.<br/><br/>### Additional information<br/><br/>[Maintainer edit]<br/>Anyone can make the update to use `gh cache` but include the information that they should make sure to have version >= 2.32.0 of the CLI (https://github.com/cli/cli/releases/tag/v2.32.0)
 installed if they are doing this manually." ]]></description></item><item>	<title>`alg`, `kid` and `typ` in OIDC tokens are not claims</title>	<link>https://github.com/github/docs/issues/28658</link>	<description><![CDATA[[Maintainer edit]<br/>_Anyone is welcome to submit the below changes in a PR_<br/><br/>### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>This table contains a mixture of \"claims\" and \"header parameters\".<br/><br/>https://github.com/github/docs/blob/c793d974c47b176cfee18cf4e0a1a7e31f798a5c/content/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect.md?plain=1#L108-L116<br/><br/>`exp`, `iat`, `jti` and `nbf` are claims, but `alg`, `kid` and `typ` in OIDC tokens are not claims.<br/> <a href="https://datatracker.ietf.org/doc/html/rfc7519#section-2">RFC 7519 Section 2</a> 

 uses the term \"JOSE Header Parameters\".<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The table should be divided into two parts.<br/><br/>First part is the JOSE header parameters.<br/><br/>| Header Parameter | Parameter type | Description            |<br/>| ---------------- | -----| ---------------------- |<br/>| `alg`| Algorithm | The algorithm used by the OIDC provider. |<br/>| `kid`| Key identifier | Unique key for the OIDC token. |<br/>| `typ`| Type | Describes the type of token. This is a JSON Web Token (JWT)
. |<br/><br/>Second part is claims.<br/><br/>|    Claim    | Claim type | Description            |<br/>| ----------- | -----| ---------------------- |<br/>| `exp`| Expires at | Identifies the expiry time of the JWT. |<br/>| `iat`| Issued at | The time when the JWT was issued. |<br/>| `jti`| JWT token identifier | Unique identifier for the OIDC token. |<br/>| `nbf`| Not before | JWT is not valid for use before this time. |<br/><br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Document how to set an organization profile picture using Gravatar</title>	<link>https://github.com/github/docs/issues/28557</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [x] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>\" <a href="https://docs.github.com/en/organizations/organizing-members-into-teams/setting-your-teams-profile-picture">Setting your team's profile picture</a> 

\"<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>There are two ways to set an organization profile picture:<br/><br/>- Upload an image, using the steps described in the article.<br/>- Enter an email address associated with a Gravatar, in the field labeled \"Gravatar email (private)
.\" GitHub will use the Gravatar image associated with that email. This is currently not documented, and the purpose of this field isn't self-explanatory.<br/><br/>### Content plan<br/><br/>- Above step 1, add a new h2 header: \"Uploading a team profile picture\"<br/>- After step 7, add a new h2 header: \"Using a Gravatar image\"<br/><br/>Under this second h2, explain concisely how to do this alternate procedure. For example, wording such as:<br/><br/>You can set a team profile picture using a Gravatar image. <br/><br/>1. In the \"Gravatar email\" field, type the email address associated with the Gravatar. <br/>2. Select **Update profile**.<br/><br/>### Related issue<br/><br/>https://github.com/github/docs/issues/28553<br/><br/><br/><br/>### Additional information<br/><br/>The screenshot below is for reference, but does not need to be included in the article:<br/><br/>![Screenshot of an organization settings screen in GitHub. A form field labeled \"Gravatar email (private)
\" is highlighted, with the rest of the screen in shadow.](https://github.com/github/docs/assets/10839362/1fc165e4-07fe-403a-9e69-6cef3fd33e47)
<br/><br/>### Who does this affect?<br/><br/>Organization owners<br/><br/>### What is the impact to users?<br/><br/>Organization owners might be confused what this field is or how to use it, especially if they are not familiar with Gravatar. This question recently generated customer confusion with Support." ]]></description></item><item>	<title>Update \"getting started\" articles for CodeQL CLI to use monospace font for file/directory names consistently</title>	<link>https://github.com/github/docs/issues/28394</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [x] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>Historically, our style guide recommended using italic font to format file names and directory names in our documentation. Our current guidelines recommend using monospace font and it would be good to update more articles to follow the current guidelines. For more information, see: \" <a href="https://docs.github.com/en/contributing/writing-for-github-docs/style-guide#file-names-and-directory-names">File names and directory names</a> 

\"<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>Files to review and check for file names and directory names that should be reformatted:<br/><br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/about-the-codeql-cli">About the CodeQL CLI</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/setting-up-the-codeql-cli">Setting up the CodeQL CLI</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/preparing-your-code-for-codeql-analysis">Preparing your code for CodeQL analysis</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/analyzing-your-code-with-codeql-queries">Analyzing your code with CodeQL queries</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/customizing-analysis-with-codeql-packs">Customizing analysis with CodeQL packs</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/codeql-cli/getting-started-with-the-codeql-cli/uploading-codeql-analysis-results-to-github">Uploading CodeQL analysis results to GitHub</a> 

<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Update \"getting started\" articles for code security to use monospace font for file/directory names consistently</title>	<link>https://github.com/github/docs/issues/28393</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [x] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>Historically, our style guide recommended using italic font to format file names and directory names in our documentation. Our current guidelines recommend using monospace font and it would be good to update more articles to follow the current guidelines. For more information, see: \" <a href="https://docs.github.com/en/contributing/writing-for-github-docs/style-guide#file-names-and-directory-names">File names and directory names</a> 

\"<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>Files to review and check for file names and directory names that should be reformatted:<br/><br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/github-security-features">GitHub security features</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/securing-your-repository">Securing your repository</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/securing-your-organization">Securing your organization</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/adding-a-security-policy-to-your-repository">Adding a security policy to your repository</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/auditing-security-alerts">Auditing security alerts</a> 

<br/>- [ ]  <a href="https://docs.github.com/en/code-security/getting-started/best-practices-for-preventing-data-leaks-in-your-organization">Best practices for preventing data leaks in your organization</a> 

<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>References to `<username>@users.noreply.github.com` should be reworked, as they are misleading</title>	<link>https://github.com/github/docs/issues/27985</link>	<description><![CDATA[👉 To the contributor who picks up this issue: See the **content plan to follow** below, under the header \"Maintainer note.\"<br/><br/>### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/adding-content-to-your-github-pages-site-using-jekyll<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>There are several references to `<username>@users.noreply.github.com` email addresses in the docs:<br/><br/>https://github.com/search?q=repo%3Agithub%2Fdocs+%3Cusername%3E%40&amp;type=code<br/><br/>This is slightly misleading. The correct behaviour is described in a note on \" <a href="https://github.com/github/docs/blob/main/content/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address.md?plain=1#L52">Setting your commit email address</a> 

\":<br/><br/>> Note: If you created your account on GitHub.com after July 18, 2017, your noreply email address for GitHub is an ID number and your username in the form of  <a href="mailto:ID+USERNAME@users.noreply.github.com">ID+USERNAME@users.noreply.github.com</a> 

. If you created your account on GitHub.com prior to July 18, 2017, and enabled Keep my email address private prior to that date, your noreply email address from GitHub is  <a href="mailto:USERNAME@users.noreply.github.com">USERNAME@users.noreply.github.com</a> 

. You can get an ID-based noreply email address for GitHub by selecting (or deselecting and reselecting)
 Keep my email address private in your email settings.<br/><br/>### Additional information<br/><br/>I made the mistake of relying on this (or equivalent)
 documentation and then people told me I was doing it wrong...<br/><br/>You can see all the times I did it wrong in:<br/>https://github.com/search?q=%22jsoref%40users.noreply.github.com%22+%2F%5B%5E%2B%5Djsoref%40users.noreply.github.com%2F&amp;type=code<br/>And you can see that I'm not the only one who made that mistake if you adjust the query a bit.<br/><br/>You can see more recent things where I'm doing it \"right\":<br/>https://github.com/search?q=%222119212%2Bjsoref%40users.noreply.github.com%22&amp;type=pullrequests<br/>https://github.com/search?q=%222119212%2Bjsoref%40users.noreply.github.com%22&amp;type=code<br/><br/>Here's a commit<br/>https://github.com/check-spelling/check-spelling-docs/commit/0643ed1315fc1df51858307573a4f123d494df29.patch generated by using the web editor -- https://github.com/check-spelling/check-spelling/wiki/_compare/86e0773ecf7ad1c138ee8a01a9499118ec7301a9...0643ed1315fc1df51858307573a4f123d494df29<br/><br/>### Maintainer note<br/><br/>Where references to `<username>@users.noreply.github.com` exist (see  <a href="https://github.com/search?q=repo%3Agithub%2Fdocs+%3Cusername%3E%40&amp;type=code">the search</a> 

)
, we should change this language to be more general about a no-reply email address that will vary depending on when the username was changed, then link to the article https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address. <br/><br/>For example:<br/><br/>> ... the commit author email address cannot be changed and is `<username>@users.noreply.github.com` by default<br/><br/>Might become:<br/><br/>> ... the commit author email address cannot be changed and will be a no-reply by default. For more information about the exact form the no-reply email address can take, see \" <a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address">AUTOTITLE</a> 

.\"<br/><br/>Where AUTOTITLE is ` <a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address">AUTOTITLE</a> 

` in the Markdown. <br/>" ]]></description></item><item>	<title>Correct Alerts syntax or clarify context where they are expected to work</title>	<link>https://github.com/github/docs/issues/27919</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>I have tried all of the syntax under the Alerts section and none of them seem to work.  The note says a prior syntax is deprecated and you should \"use the syntax as described in this section\" implying what follows currently works.  It mentions this is an extension of markdown, but doesn't clarify in what contexts it should work.  At least it doesn't work in github project readme.md files.<br/><br/>Additionally I would say screenshots shouldn't be used as the rendering example.  Just repeat the syntax itself without code ticks to demonstrate what it renders as-is since you are already in a github md file.<br/><br/>https://github.com/github/docs/blob/e77f16ab2c0fa2603239f8ef5fe51cae7f27dbcf/content/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax.md<br/><br/><br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The Alerts section<br/><br/>### Additional information<br/><br/>My attempts to follow the instructions as well as variations I saw suggested when discussion Alerts not working:<br/><br/>! <a href="https://github.com/github/docs/assets/97156524/237ba785-711f-4dfd-a6d9-722ca6ddf0e1">image</a> 

<br/><br/>! <a href="https://github.com/github/docs/assets/97156524/4d6a2bf9-d60e-46d7-8469-43ff514dd0a0">image</a> 

<br/><br/>Compared to the screenshot from within the article:<br/>! <a href="https://github.com/github/docs/assets/97156524/093b97ec-3da0-4266-b493-afb950ee396f">image</a> 

<br/><br/>----<br/>_Update by a maintainer_<br/><br/>## Content change suggested to fix this issue<br/><br/>We need to make it clear which markdown content this syntax is supported in. When you edit an existing markdown file, the preview may not display the alert correctly. It would also be helpful to update the note about syntax to include a short example of what the deprecated syntax is (`> **Note**` from https://github.com/orgs/community/discussions/16925)
.<br/><br/>We can do this by editing the  <a href="https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts">\"Alerts\" section of the basic writing article</a> 

.<br/><br/>1. Update the note about the change in syntax to include a brief example of the old syntax (see https://github.com/orgs/community/discussions/16925 \"Initial - 10 May 2022\".<br/>2. Update the introduction to mention that the syntax is supported in Issues, Pull requests, Discussions, Gists, Releases, and Markdown files.<br/>3. Add a brief mention that when you edit an existing Markdown file, the preview may display the raw syntax, but that the alert will be displayed correctly when the changes are committed." ]]></description></item><item>	<title>REST API explain that Packages are created using a package manager</title>	<link>https://github.com/github/docs/issues/27853</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/rest/packages/packages?apiVersion=2022-11-28<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>There is no doc for creating new packages or editing permissions for an already existing one.<br/><br/>### Additional information<br/><br/>_No response_<br/><br/>----<br/><br/>_Maintainer update_<br/><br/>## Response to question on missing congtent<br/><br/>I checked in with an subject matter expert on this issue. They said:<br/><br/>> Packages can be published through client CLIs such as npm or docker, or through Actions, but not via the REST API.<br/><br/>## Content updates required to fix this issue<br/><br/>We can make this clearer to users by updating the introductory section for the REST API Packages reference docs. This part of the article is not automatically generated and can be fixed with a pull request to this repository. Any changes must be restricted to this section of the article: https://github.com/github/docs/blob/main/content/rest/packages/packages.md?plain=1#L17-L30.<br/><br/>Update the  <a href="https://docs.github.com/en/rest/packages/packages?apiVersion=2022-11-28#about-github-packages">About GitHub Packages</a> 

 section as follows:<br/><br/>1. Revise the first paragraph to mention that GitHub Packages supports a range of package managers for publishing packages and that once you have published a package you can use the REST API to manage it.<br/>2. Include a link to  <a href="https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages#supported-clients-and-formats">Introduction to GitHub Packages</a> 

 for more information.<br/><br/>" ]]></description></item><item>	<title>Docs on `fail-fast` doesn't indicate that it can be an expression</title>	<link>https://github.com/github/docs/issues/27840</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>`jobs.<job_id>.strategy.fail-fast` appears to accept expressions (not just booleans)
 per the  <a href="https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability">context availability docs</a> 

. It would be much appreciated if the `fail-fast` docs are further clarified to avoid confusion.<br/><br/>See examples in the wild: https://github.com/search?q=path%3A.github%2Fworkflows+%22fail-fast%3A+%24%7B%7B%22&amp;type=code<br/><br/>### Additional information<br/><br/>[maintainer update]<br/>Follow the content plan  <a href="https://github.com/github/docs/issues/27840#issuecomment-1721741209">here</a> 

" ]]></description></item><item>	<title>Add additional UK Home Office organisations</title>	<link>https://github.com/github/government.github.com/issues/932</link>	<description><![CDATA[Add additional UK Home Office organisations: <br/>```<br/>    [\"UKHomeOffice\"],<br/>    [\"HO-CTO\"],<br/>    [\"UKHomeOffice-test\"],<br/>    [\"HMPO\"],<br/>    [\"Enterprise-functional-tests\"],<br/>    [\"UKHomeOffice-attic\"],<br/>    [\"technical-docs\"],<br/>    [\"HomeOffice-Automation-SSO\"],<br/>    [\"UKHomeOfficeForms\"]<br/>```" ]]></description></item><item>	<title>Specifying exception names in the overgeneral-exceptions</title>	<link>https://github.com/github/issue-metrics/issues/3</link>	<description><![CDATA[pylint: Command line or configuration file:1: UserWarning: Specifying exception names in the overgeneral-exceptions option without module name is deprecated and support for it will be removed in pylint 3.0. Use fully qualified name (maybe 'builtins.Exception' ?)
 instead." ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Remove typed-paths interface and use FilePath for everything</title>	<link>https://github.com/github/semantic/issues/673</link>	<description><![CDATA[Though FilePath is very flawed, especially on Windows, typed paths were a failed experiment. They did not actually catch any bugs; the best thing they did was expose some very weird behavior in certain functions, ones that we were unable to change (without huge renovations)
 lest command-line invocations break. There is a new FilePath type coming, one based on ShortByteString and officially blessed by a GHC working group, and we should just switch back to FilePath so that we can transition to that when possible." ]]></description></item><item>	<title>Caching</title>	<link>https://github.com/github/setup-licensed/issues/159</link>	<description><![CDATA[Have you considered caching the binary so it runs faster? This is one of the longest running steps in my actions" ]]></description></item><item>	<title>Build `x86` on Windows with the built-in tools</title>	<link>https://github.com/github/smimesign/issues/91</link>	<description><![CDATA[We build `amd64` directly: https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L89<br/><br/>But I had trouble figuring out how to build for `GOARCH=386` without errors. Right now, we use https://github.com/egor-tensin/setup-mingw to switch to 32-bit builds, which pulls down a bunch of tooling and takes a few minutes:<br/><br/>https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L90-L94<br/><br/>I can't help but feel there must still be a nice (or at least much faster)
 way to do this using the built-in tools from Actions." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>The run-name suggestion creates improper indentation</title>	<link>https://github.com/github/vscode-github-actions/issues/240</link>	<description><![CDATA[**Describe the bug**<br/>A clear and concise description of what the bug is.<br/><br/>**To Reproduce**<br/>In a workflow accept the `run-name` suggestion<br/><br/>**Expected behavior**<br/>The indentation will be correct and not buggy <br/><br/>**Screenshots**<br/><br/>https://github.com/github/vscode-github-actions/assets/85468376/38209d6c-e6b1-44e0-a7dd-2089ebcd22b9<br/><br/>" ]]></description></item><item>	<title>\"Context access might be invalid\" warning thrown for repository variables and secrets</title>	<link>https://github.com/github/vscode-github-actions/issues/222</link>	<description><![CDATA[**Describe the bug**<br/>After upgrading to 0.25.8, a \"Context access might be invalid\" warning is thrown for all repository variables and secrets in the workflow file. Refreshing the secrets/vars in the extension has no effect.<br/><br/>**Expected behavior**<br/>Secrets/vars should not throw a \"Context access might be invalid\" warning.<br/><br/>**Screenshots**<br/><img width=\"529\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/d609569c-2ec7-41cd-a3f8-667980b6c81f\"><br/><img width=\"633\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/7ef29778-8c73-45f9-a050-0f9e258907b0\"><br/><br/>**Extension Version**<br/>`v0.25.8`<br/><br/>**Additional context**<br/>Add any other context about the problem here.<br/>" ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item></channel></rss>
