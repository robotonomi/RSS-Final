<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Update or replace very old vendored version of jquery</title>	<link>https://github.com/github/choosealicense.com/issues/1139</link>	<description><![CDATA[1.11.0 is vendored, 3.7.3 is latest. < 3.5.0 has various reported XSS vulnerabilities; though I don't see how they'd be exploitable through this site, it'd be nice to be rid of the old version anyway. Or better, remove the need for jquery?<br/><br/>Thoughts or pull requests welcome." ]]></description></item><item>	<title>Is clipboard.js still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1138</link>	<description><![CDATA[Another followup to #1136 <br/><br/><br/>Standard https://caniuse.com/clipboard `copy` might be supported by every browser that matters, which might make it possible to dispense with `clipboard.js`.<br/><br/>Not certain, thoughts or PRs welcome." ]]></description></item><item>	<title>Is normalize.css still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1137</link>	<description><![CDATA[It seems maybe `normalize.css` could be tossed out as well? Many random comments along the lines of https://www.reddit.com/r/webdev/comments/10kqgju/how_relevant_is_normalize_css_in_2023/<br/><br/>_Originally posted by @mlinksva in https://github.com/github/choosealicense.com/issues/1136#issuecomment-1694110628_<br/>            " ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Correction for \"Enabling OAuth app access restrictions for your organization\"</title>	<link>https://github.com/github/docs/issues/29660</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/organizations/managing-oauth-access-to-your-organizations-data/enabling-oauth-app-access-restrictions-for-your-organization<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>! <a href="https://github.com/github/docs/assets/10177608/0d9c1696-c0e6-4995-bbfe-68707a68bce5">image</a> 

<br/><br/>Needs to be updated.<br/>The sidebar looks like this at Organisation Settings:<br/>! <a href="https://github.com/github/docs/assets/10177608/bb456643-33ab-4ca6-b851-2e0a6eef9f57">image</a> 

<br/><br/>OAuth Apllication Policy is under \"Third-party Access\" and not under \"Integrations\"<br/><br/>Looking at the github docs code...<br/>```<br/>{% data reusables.profile.access_org %} {% data reusables.profile.org_settings %} {% data reusables.organizations.oauth_app_access %}<br/><br/>Under \"Third-party application access policy,\" click Setup application access restrictions.<br/>After you review the information about third-party access restrictions, click Restrict third-party application access.<br/>```<br/>* The re-usable include needs to be changed. - remove the `Under Integrations`<br/>* `Under \"Third-party application access policy,\" click Setup application access restrictions.` -> `Under \"Third-party access\" click Setup application access restrictions.` <br/><br/>### Additional information<br/><br/>Nothing else" ]]></description></item><item>	<title>use `gh issue create` or `actions/github-script` instead of third-party action for \"Scheduling issue creation\" example</title>	<link>https://github.com/github/docs/issues/29566</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/actions/managing-issues-and-pull-requests/scheduling-issue-creation<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>make it so that it uses a first-party action or tool. related to idea from #29419<br/><br/>ideas:<br/><br/>```yml<br/>name: Weekly Team Sync<br/>on:<br/>  schedule:<br/>    - cron: 20 07 * * 1<br/><br/>jobs:<br/>  create_issue:<br/>    name: Create team sync issue<br/>    runs-on: ubuntu-latest<br/>    permissions:<br/>      issues: write<br/>    steps:<br/>      - name: Create team sync issue<br/>        uses: actions/github-script@v6<br/>        with:<br/>          script: |<br/>            await github.issues.create({<br/>              owner: context.repo.owner,<br/>              repo: context.repo.repo,<br/>              title: \"Team sync\",<br/>              assignees: [\"monalisa\", \"doctocat\", \"hubot\"],<br/>              labels: [\"weekly sync\", \"docs-team\"],<br/>              body: `### Agenda<br/><br/>            - [ ] Start the recording<br/>            - [ ] Check-ins<br/>            - [ ] Discussion points<br/>            - [ ] Post the recording<br/><br/>            ### Discussion Points<br/>            Add things to discuss below<br/><br/>            -  <a href="https://github.com/orgs/github/projects/3">Work this week</a> 

`,<br/>            })
;<br/>```<br/>or<br/><br/>```yml<br/>name: Weekly Team Sync<br/>on:<br/>  schedule:<br/>    - cron: 20 07 * * 1<br/><br/>jobs:<br/>  create_issue:<br/>    name: Create team sync issue<br/>    runs-on: ubuntu-latest<br/>    permissions:<br/>      issues: write<br/>    steps:<br/>      - name: Create team sync issue<br/>        run: |<br/>          gh issue create \\<br/>            --repo \"$REPO\" \\<br/>            --assignee \"$ASSIGNEES\" \\<br/>            --label \"$LABELS\" \\<br/>            --body \"$BODY\"<br/>        env:<br/>          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}<br/>          REPO: ${{ github.repository }}<br/>          ASSIGNEES: monalisa,doctocat,hubot<br/>          LABELS: weekly sync,docs-team<br/>          BODY: |<br/>            ### Agenda<br/><br/>            - [ ] Start the recording<br/>            - [ ] Check-ins<br/>            - [ ] Discussion points<br/>            - [ ] Post the recording<br/><br/>            ### Discussion Points<br/>            Add things to discuss below<br/><br/>            -  <a href="https://github.com/orgs/github/projects/3">Work this week</a> 

<br/>```<br/><br/>### Additional information<br/><br/>the following pages use actions/github-script:<br/>- https://docs.github.com/en/actions/managing-issues-and-pull-requests/removing-a-label-when-a-card-is-added-to-a-project-board-column<br/>- https://docs.github.com/en/actions/managing-issues-and-pull-requests/adding-labels-to-issues<br/><br/>or this one which uses gh cli:<br/>- https://docs.github.com/en/actions/managing-issues-and-pull-requests/commenting-on-an-issue-when-a-label-is-added<br/><br/>🤷‍♀️ doesnt matter which but itd be good to nail down which is preferred for docs cohesiveness and consistency.<br/><br/>this same \"use a first-party tool\" idea could also apply to https://docs.github.com/en/actions/managing-issues-and-pull-requests/moving-assigned-issues-on-project-boards<br/><br/>[maintainer edit]<br/>### Content plan<br/>Check the comment  <a href="https://github.com/github/docs/issues/29566#issuecomment-1789723131">here</a> 

" ]]></description></item><item>	<title>Suggest resolving symlinks before generating sarif reports</title>	<link>https://github.com/github/docs/issues/26497</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>There is a section https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#reporting-consistent-filepaths, but it's unclear whether that's the right place, perhaps a new section should be created<br/><br/>### Additional information<br/><br/>When GitHub renders a SARIF report entry that points to a symbolic link file, it does not resolve the symbolic link, which means that the referenced content isn't rendered.<br/><br/>https://github.com/check-spelling/CWP-Main/security/code-scanning/5497<br/><br/><img width=\"931\" alt=\"image\" src=\"https://github.com/github/docs/assets/2119212/75c88284-5301-48a5-9456-555b0292b079\"><br/><br/>Apparently the recommended practice should be for the result to link to the underlying file.<br/><br/>(I'm not particularly comfortable with this behavior, but I spoke with people from GitHub Security Lab and this was the input they provided. My constraint is that in this case, the user - also me - configured the tool to exclude the resolved file, but not the unresolved file, so the tool complained about content as it found it in the unresolved file...)
<br/><br/>----<br/><br/>## Docs changes required to close this issue<br/><br/>Following discussions internally and on this issue, we want to make the following changes:<br/><br/>1. Change the name of the \" <a href="https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#specifying-the-root-for-source-files">Specifying the root for source files</a> 

\" section to \"Specifying the location for source files\".<br/>2. Add a short summary of the importance of providing the location of source files so that code scanning alerts can be displayed in the file that contains the problem.<br/>3. Add a new H3 heading above the existing content, something like: \"Specifying the root for source files\".<br/>4. Above the next H2 (Validating your SARIF file)
, add a new H3 heading, something like \"Resolving symlinks before generating SARIF results\".<br/>5. Write a brief paragraph explaining that if the relative URI for a result is matched against a file defined using a symlink, code scanning is unable to display the result. So you need to resolve any symlinked files, and report any results in those files using the resolved URI." ]]></description></item><item>	<title>Add additional UK Home Office organisations</title>	<link>https://github.com/github/government.github.com/issues/932</link>	<description><![CDATA[Add additional UK Home Office organisations: <br/>```<br/>    [\"UKHomeOffice\"],<br/>    [\"HO-CTO\"],<br/>    [\"UKHomeOffice-test\"],<br/>    [\"HMPO\"],<br/>    [\"Enterprise-functional-tests\"],<br/>    [\"UKHomeOffice-attic\"],<br/>    [\"technical-docs\"],<br/>    [\"HomeOffice-Automation-SSO\"],<br/>    [\"UKHomeOfficeForms\"]<br/>```" ]]></description></item><item>	<title>Specifying exception names in the overgeneral-exceptions</title>	<link>https://github.com/github/issue-metrics/issues/3</link>	<description><![CDATA[pylint: Command line or configuration file:1: UserWarning: Specifying exception names in the overgeneral-exceptions option without module name is deprecated and support for it will be removed in pylint 3.0. Use fully qualified name (maybe 'builtins.Exception' ?)
 instead." ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>delete-empty-repos.sh - Handle Pagination</title>	<link>https://github.com/github/platform-samples/issues/190</link>	<description><![CDATA[ <a href="https://github.com/github/platform-samples/blob/master/api/bash/delete-empty-repos.sh">delete-empty-repos.sh</a> 

 currently works with default pagination of only 30 repositories.<br/><br/>Need to handle pagination in case of more than 30 repositories are within the organization.<br/><br/> <a href="https://developer.github.com/v3/guides/traversing-with-pagination/">Relevant Doc</a> 

" ]]></description></item><item>	<title>Remove typed-paths interface and use FilePath for everything</title>	<link>https://github.com/github/semantic/issues/673</link>	<description><![CDATA[Though FilePath is very flawed, especially on Windows, typed paths were a failed experiment. They did not actually catch any bugs; the best thing they did was expose some very weird behavior in certain functions, ones that we were unable to change (without huge renovations)
 lest command-line invocations break. There is a new FilePath type coming, one based on ShortByteString and officially blessed by a GHC working group, and we should just switch back to FilePath so that we can transition to that when possible." ]]></description></item><item>	<title>Caching</title>	<link>https://github.com/github/setup-licensed/issues/159</link>	<description><![CDATA[Have you considered caching the binary so it runs faster? This is one of the longest running steps in my actions" ]]></description></item><item>	<title>Build `x86` on Windows with the built-in tools</title>	<link>https://github.com/github/smimesign/issues/91</link>	<description><![CDATA[We build `amd64` directly: https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L89<br/><br/>But I had trouble figuring out how to build for `GOARCH=386` without errors. Right now, we use https://github.com/egor-tensin/setup-mingw to switch to 32-bit builds, which pulls down a bunch of tooling and takes a few minutes:<br/><br/>https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L90-L94<br/><br/>I can't help but feel there must still be a nice (or at least much faster)
 way to do this using the built-in tools from Actions." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>The run-name suggestion creates improper indentation</title>	<link>https://github.com/github/vscode-github-actions/issues/240</link>	<description><![CDATA[**Describe the bug**<br/>A clear and concise description of what the bug is.<br/><br/>**To Reproduce**<br/>In a workflow accept the `run-name` suggestion<br/><br/>**Expected behavior**<br/>The indentation will be correct and not buggy <br/><br/>**Screenshots**<br/><br/>https://github.com/github/vscode-github-actions/assets/85468376/38209d6c-e6b1-44e0-a7dd-2089ebcd22b9<br/><br/>" ]]></description></item><item>	<title>\"Context access might be invalid\" warning thrown for repository variables and secrets</title>	<link>https://github.com/github/vscode-github-actions/issues/222</link>	<description><![CDATA[**Describe the bug**<br/>After upgrading to 0.25.8, a \"Context access might be invalid\" warning is thrown for all repository variables and secrets in the workflow file. Refreshing the secrets/vars in the extension has no effect.<br/><br/>**Expected behavior**<br/>Secrets/vars should not throw a \"Context access might be invalid\" warning.<br/><br/>**Screenshots**<br/><img width=\"529\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/d609569c-2ec7-41cd-a3f8-667980b6c81f\"><br/><img width=\"633\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/7ef29778-8c73-45f9-a050-0f9e258907b0\"><br/><br/>**Extension Version**<br/>`v0.25.8`<br/><br/>**Additional context**<br/>Add any other context about the problem here.<br/>" ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item></channel></rss>
