<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Update or replace very old vendored version of jquery</title>	<link>https://github.com/github/choosealicense.com/issues/1139</link>	<description><![CDATA[1.11.0 is vendored, 3.7.3 is latest. < 3.5.0 has various reported XSS vulnerabilities; though I don't see how they'd be exploitable through this site, it'd be nice to be rid of the old version anyway. Or better, remove the need for jquery?<br/><br/>Thoughts or pull requests welcome." ]]></description></item><item>	<title>Is clipboard.js still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1138</link>	<description><![CDATA[Another followup to #1136 <br/><br/><br/>Standard https://caniuse.com/clipboard `copy` might be supported by every browser that matters, which might make it possible to dispense with `clipboard.js`.<br/><br/>Not certain, thoughts or PRs welcome." ]]></description></item><item>	<title>Is normalize.css still needed?</title>	<link>https://github.com/github/choosealicense.com/issues/1137</link>	<description><![CDATA[It seems maybe `normalize.css` could be tossed out as well? Many random comments along the lines of https://www.reddit.com/r/webdev/comments/10kqgju/how_relevant_is_normalize_css_in_2023/<br/><br/>_Originally posted by @mlinksva in https://github.com/github/choosealicense.com/issues/1136#issuecomment-1694110628_<br/>            " ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>GHA skip-checks:true recomendation and behaviour not consistent with git-commit --trailer behaviour</title>	<link>https://github.com/github/docs/issues/25562</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://github.com/github/docs/blob/main/content/actions/managing-workflow-runs/skipping-workflow-runs.md?plain=1#L29<br/><br/>This concern the use of `skip-checks: true` inserted into the end of a commit message to inhibit GHA workflows.<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>It is not (easily)
 possible to insert \"TWO blank lines\" as the `git commit` command automatically reformats the message based on de-facto rules.  This will remove the double blank lines and replace it with a single blank line, before adding the message to git.<br/><br/>Please try your own instructions to confirm this automatic reformat and please investigate to confirm no obvious git option to inhibit this behaviour exist.  If there is such an option, you should document it is needed to achieve the goal of the github documentation.<br/><br/>Furthermore there is an option to use `git commit --trailer skip-checks:true` which has a default behaviour (that also does not insert TWO blank lines, before the trailer)
.<br/><br/>So the 3 actions this issue is seeking to resolve:<br/> * GHA modified to accept a SINGLE blank line and allow multiple key=value and key:value items to be specified in the last paragraph of the git commit message.  Above/below the ones GHA is looking for.  The documentation indicates/implies it must be in isolation at the end, but this does not inter-operate with other mechanisms doing the same.<br/> * The documentation to be updated to remove the TWO blank lines rule and describe it as ONE blank line.<br/> * The documentation to provide an example command line demonstrating the --trailer feature to git-commit.<br/> <br/>Now if GHA must really have its TWO blank lines, then maybe it could test and document how to achieve this, simple sounding action in a commit message in common environments.  Lets say \"Linux Command Line\" and \"Windows Desktop\" and \"MacOS Desktop\".<br/><br/>GHA should also explain how this might interact and work with other mechanisms using trailers, as I understand it, it should be possible to tail with:<br/><br/>```<br/>Message Summary Line<br/><br/>Message Details Paragraph 1<br/><br/>Message Details Paragraph 2<br/><br/>Sign-Off: My Name <user@domain.com><br/>Another-Special-Thing: option123<br/>key=value<br/>skip-checks:true<br/>My-Key=MyValue<br/><br/>```<br/><br/>The GHA mechanism should also work in a situation like the above.  Since it follows the rules that:<br/> * Trailing blank lines are removed, to expose the last paragraph block<br/> * Last paragraph is parsed for `Key:Value` or `key=value` format information, with spaces allow around the '=' and ':' that are disregarded.  Although maybe no space is allowed before ':' as that does not seem common usage.<br/> * It allows other items to be both before and after the `skip-checks` item.<br/> * The content is entirely in the last paragraph block of the commit log message.<br/><br/>Following these rules should ensure scope of interoperability with other mechanisms also working like this.<br/><br/><br/><br/>### Additional information<br/><br/>$ git --version<br/>git version 2.39.1<br/>$ grep PRETTY /etc/os-release <br/>PRETTY_NAME=\"CentOS Stream 8\"<br/>" ]]></description></item><item>	<title>Update \"Add theme to Pages site\"</title>	<link>https://github.com/github/docs/issues/25314</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/adding-a-theme-to-your-github-pages-site-using-jekyll<br/>adding-a-theme-to-your-github-pages-site-using-jekyll.md<br/><br/>### What changes are you suggesting?<br/><br/>I tried to follow the guide step by step, so I chose a github pages deploy branch, it worked perfectly. The site was up and working as expected. <br/>When I tried to install a theme through adding `_config.yml` file and typed `theme: slate` I received the error: <br/>`github-pages 228 | Error:  The slate theme could not be found.`<br/>Well, that's not right, so I tried to set up the source for pages from `GitHub Actions'.<br/>Again, received same error:<br/>```<br/>Configuration file: /github/workspace/./_config.yml<br/>             Theme: slate<br/>github-pages 228 | Error:  The slate theme could not be found.<br/>```<br/>Since I obviously couldn't do what I wanted, I think you should update this page.<br/><br/>You can see the exact stacktrace by following this link - https://github.com/DRMPN/open-source-ops<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Explain what conditions must be met to show hover icon to create issue behind tasklist items</title>	<link>https://github.com/github/docs/issues/24862</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The docs say:<br/><br/>> If a task requires further tracking or discussion, you can convert the task to an issue by hovering over the task and clicking _button-icon-here_ in the upper-right corner of the task.<br/><br/>The docs don't explain if there are any rules you need to follow to allow GitHub to show that hover icon, like:<br/><br/>- only put issue or PR link after the tasklist<br/>- don't use special characters like `(` or `)
`<br/>- don't do ...<br/><br/>Or maybe this is a \"rights\" issue where you need a certain level of access to the repository before you see that button?<br/><br/>### Additional information<br/><br/>Why I'm asking about any possible rules: @viceice (maintainer of the repository)
 is **not** seeing the hover icon behind items in their tasklist:<br/><br/>- https://github.com/containerbase/base/issues/875<br/><br/>With the current docs I can't determine if this is:<br/><br/>- bad formatting of the tasklist<br/>- a problem with access rights to the repository<br/>- bug in GitHub<br/><br/>----<br/>_Update from a maintainer_<br/><br/>## Content change suggested to fix this issue<br/><br/>We need to make it clearer to users how to convert a tasklist item to an issue. We'll do this by adding a brief new section to the article  <a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists">About task lists</a> 

.<br/><br/>1. After the section \"Reordering tasks\", add a new heading level 2 \"Converting tasks into issues\".<br/>2. Add a brief explanation of how to convert a task into an issue.<br/>3. Add the following screenshot to the folder for images about writing: https://github.com/github/docs/tree/main/assets/images/help/writing.<br/>    ! <a href="https://github.com/github/docs/assets/1877141/5c074ac2-2252-4f3f-b99e-edda28dc8255">task-list-convert</a> 

<br/>4. Include the image below the explanation and make sure you add suitable alt text (see  <a href="https://docs.github.com/en/contributing/writing-for-github-docs/style-guide#images">Images</a> 

)
. <br/> <br/>You may find it useful to look at the alt text for other images on the page for inspiration, for example: <br/>    https://github.com/github/docs/blob/275f369a2b5e01bfd108f8f957383d61ba5746f2/content/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists.md?plain=1#L64<br/><br/><br/><br/>" ]]></description></item><item>	<title>Specifying exception names in the overgeneral-exceptions</title>	<link>https://github.com/github/issue-metrics/issues/3</link>	<description><![CDATA[pylint: Command line or configuration file:1: UserWarning: Specifying exception names in the overgeneral-exceptions option without module name is deprecated and support for it will be removed in pylint 3.0. Use fully qualified name (maybe 'builtins.Exception' ?)
 instead." ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Remove typed-paths interface and use FilePath for everything</title>	<link>https://github.com/github/semantic/issues/673</link>	<description><![CDATA[Though FilePath is very flawed, especially on Windows, typed paths were a failed experiment. They did not actually catch any bugs; the best thing they did was expose some very weird behavior in certain functions, ones that we were unable to change (without huge renovations)
 lest command-line invocations break. There is a new FilePath type coming, one based on ShortByteString and officially blessed by a GHC working group, and we should just switch back to FilePath so that we can transition to that when possible." ]]></description></item><item>	<title>Caching</title>	<link>https://github.com/github/setup-licensed/issues/159</link>	<description><![CDATA[Have you considered caching the binary so it runs faster? This is one of the longest running steps in my actions" ]]></description></item><item>	<title>Build `x86` on Windows with the built-in tools</title>	<link>https://github.com/github/smimesign/issues/91</link>	<description><![CDATA[We build `amd64` directly: https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L89<br/><br/>But I had trouble figuring out how to build for `GOARCH=386` without errors. Right now, we use https://github.com/egor-tensin/setup-mingw to switch to 32-bit builds, which pulls down a bunch of tooling and takes a few minutes:<br/><br/>https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L90-L94<br/><br/>I can't help but feel there must still be a nice (or at least much faster)
 way to do this using the built-in tools from Actions." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>The run-name suggestion creates improper indentation</title>	<link>https://github.com/github/vscode-github-actions/issues/240</link>	<description><![CDATA[**Describe the bug**<br/>A clear and concise description of what the bug is.<br/><br/>**To Reproduce**<br/>In a workflow accept the `run-name` suggestion<br/><br/>**Expected behavior**<br/>The indentation will be correct and not buggy <br/><br/>**Screenshots**<br/><br/>https://github.com/github/vscode-github-actions/assets/85468376/38209d6c-e6b1-44e0-a7dd-2089ebcd22b9<br/><br/>" ]]></description></item><item>	<title>\"Context access might be invalid\" warning thrown for repository variables and secrets</title>	<link>https://github.com/github/vscode-github-actions/issues/222</link>	<description><![CDATA[**Describe the bug**<br/>After upgrading to 0.25.8, a \"Context access might be invalid\" warning is thrown for all repository variables and secrets in the workflow file. Refreshing the secrets/vars in the extension has no effect.<br/><br/>**Expected behavior**<br/>Secrets/vars should not throw a \"Context access might be invalid\" warning.<br/><br/>**Screenshots**<br/><img width=\"529\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/d609569c-2ec7-41cd-a3f8-667980b6c81f\"><br/><img width=\"633\" alt=\"image\" src=\"https://github.com/github/vscode-github-actions/assets/3399494/7ef29778-8c73-45f9-a050-0f9e258907b0\"><br/><br/>**Extension Version**<br/>`v0.25.8`<br/><br/>**Additional context**<br/>Add any other context about the problem here.<br/>" ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item></channel></rss>
