<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Move from AppVeyor to GitHub Actions</title>	<link>https://github.com/github/certstore/issues/19</link>	<description><![CDATA[This file should be migrated to GitHub Actions: https://github.com/github/certstore/blob/main/.appveyor.yml" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Add Free Art License</title>	<link>https://github.com/github/choosealicense.com/issues/314</link>	<description><![CDATA[ <a href="http://artlibre.org/licence/lal/en/">Free Art License 1.3</a> 

<br/>" ]]></description></item><item>	<title>Internationalization / i18n / multilingual site</title>	<link>https://github.com/github/choosealicense.com/issues/68</link>	<description><![CDATA[Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62<br/><br/>We already have the bulk of the strings in a single file (`_config.yml`)
, so it should just be a matter of abstracting out some of our variables, as far as I can tell.<br/><br/>Would love to take this on starting in August if there's interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons learned form https://github.com/CMSgov/healthcare.gov.<br/><br/>@parkr any interest?<br/>@dhcole any insight / words of wisdom?<br/>" ]]></description></item><item>	<title>Space between backticks of fenced code block and language for highlighting</title>	<link>https://github.com/github/docs/issues/6046</link>	<description><![CDATA[### What article on docs.github.com is affected?<br/><br/>There are 149 occurrences in .md files where there is a single space after the start of a fenced code block and before the indicated code language, e.g. `` ``` shell ``  (regex: `` ``` \\w ``)
, whereas there is no space in 1660 other cases, e.g. `` ```shell ``.<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>I suggest unifying this to no space and to add a remark to the  <a href="https://github.com/github/docs/blob/main/contributing/content-style-guide.md">Content Style Guide</a> 

.<br/><br/>### Additional information<br/><br/>I also noticed that in 11 cases the indicated language is `yml` and in 487 cases it is `yaml`. I suggest unifying it to `yaml`.<br/><br/>I'm happy to open a PR that implements the suggested changes.<br/>" ]]></description></item><item>	<title>Missing text in \"Working with the Apache Maven registry\"</title>	<link>https://github.com/github/docs/issues/6023</link>	<description><![CDATA[### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The first  <a href="https://github.com/github/docs/blame/main/content/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry.md#L34">`if` statement at line 34</a> 

 of the corresponding Markdown file causes nothing to appear between \"Replace\" and \", and *OWNER*\", effectively resulting in the paragraph being<br/><br/>> In the repositories tag, configure a repository by mapping the id of the repository to the id you added in the server tag containing your credentials. Replace , and OWNER with the name of the user or organization account that owns the repository. Because uppercase letters aren't supported, you must use lowercase letters for the repository owner even if the GitHub user or organization name contains uppercase letters." ]]></description></item><item>	<title>[Improvement]: Update REST API header examples and eliminate extraneous information</title>	<link>https://github.com/github/docs/issues/5993</link>	<description><![CDATA[### What feature or product is affected?<br/><br/>REST API<br/><br/>### What is the new or expected behavior?<br/><br/>Currently, we have several REST API articles that include examples with headers. However, these examples are outdated because the header has changed.   <br/><br/>1. Omit portions of the header that are not relevant to the example. For instance, if an example is talking about rate limiting, only include the rate limiting headers. <br/>2. Ensure that the headers that are used are up-to-date.<br/><br/>### How is the old or inaccurate behavior currently documented?<br/><br/>headers are out of date and show extraneous information<br/><br/><br/><br/>### Who does this affect?<br/><br/>users of the REST API<br/><br/>### What is the impact to users?<br/><br/>confusion about differences between the API headers that the user sees and what the docs show" ]]></description></item><item>	<title>[Improvement]: Update REST API examples to use HTTP/2 instead of HTTP/1.1</title>	<link>https://github.com/github/docs/issues/5992</link>	<description><![CDATA[### What feature or product is affected?<br/><br/>REST API<br/><br/>### What is the new or expected behavior?<br/><br/>use HTTP/2 instead of HTTP/1.1<br/><br/>### How is the old or inaccurate behavior currently documented?<br/><br/>The REST API examples should use HTTP/2 instead of HTTP/1.1<br/><br/>For example, in  <a href="https://docs.github.com/en/rest/overview/resources-in-the-rest-api#schema">this code snippet</a> 

,<br/><br/>```<br/>> HTTP/1.1 200 OK<br/>```<br/><br/>would change to<br/><br/>```<br/>> HTTP/2 200<br/>```<br/><br/><br/>Note: To compare HTTP2 vs HTTP1.1 responses, you can pass the `-v` option to curl: `curl -i https://api.github.com -v --http1.1`<br/><br/><br/>### Who does this affect?<br/><br/>users of the REST API<br/><br/>### What is the impact to users?<br/><br/>confusion about differences between the API responses that the user sees and what the docs show" ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>XML report for CI</title>	<link>https://github.com/github/licensed/issues/52</link>	<description><![CDATA[Hi,<br/><br/>I'm integrating licensed for a poc in our Jenkins pipeline. It could be great to get a report of all licenses checks in an XML formatted file; so we can process it using Jenkins plugins. For now, I have to analyse the `XXX dependencies checked, XXX warnings found.` string formatted output of `licensed status` command.<br/><br/>We can consider **licensed results** as **tests results**.<br/>* If all licenses check passed; then the overall test is **passed**.<br/>* If one license is found as unknown, or not matching any of allowed, ignored or reviewed configs; then the check/test **failed**.<br/><br/>Standards test output formats such as junit, nunit, mstest, google-test, etc. would be great cos already known by many CI tools. Junit is probably the most used one.<br/><br/>Organizing tests in \"groups\" matching the package type (npm, pip, go, etc.)
 and license type (mit, gpl...)
 would also allows to \"count\" the type of licenses found... providing some kind of statistics ^<br/><br/>Example of output in Jenkins test plugin results, processing the XML file could be:<br/>```<br/>Package                  Fail Skip Pass Total<br/>- total                     0    0   69    69<br/>- npm                       0    0   53    53<br/>  - mit                     0    0   45    45<br/>    - package1              0    0    1     1<br/>    - package 2             ...<br/>    - ...<br/>  - apache-2.0                              3<br/>    - package46<br/>    - ...<br/>  - bsd-3-clause                            1 <br/>    - package49<br/>  - isc                                     1<br/>    - package50<br/>  - unknown                                 3<br/>    - package51             1    0    0     1<br/>    - ...<br/>- go                                       16<br/>  - mit                                    14<br/>    - ...<br/>  - isc                                     1<br/>    - ...<br/>  - unknown                                 1<br/>    - packagexx             1    0    0     1<br/>    - ...<br/>```<br/>I did not fill the array; but you've got the point ;-)
<br/><br/>Regards,<br/><br/>Chris" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Investigate semantic-rust macro tests</title>	<link>https://github.com/github/semantic/issues/553</link>	<description><![CDATA[@p-alik has graciously added the `semantic-rust` package but we've had to exclude some macro corpus tests due to parsing issues.<br/><br/>See https://github.com/github/semantic/pull/551 for details." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>Pulling in code history and branches</title>	<link>https://github.com/github/super-linter/issues/1319</link>	<description><![CDATA[I have github actions on my react app. I am getting the following errors:<br/><br/>```<br/>Pulling in code history and branches...<br/>You are not currently on a branch.<br/>Please specify which branch you want to merge with.<br/>See git-pull(1)
 for details.<br/><br/>    git pull <remote> <branch><br/><br/>2021-03-07 22:56:22 [INFO]   Failed to switch to master branch to get files changed!<br/>2021-03-07 22:56:22 [FATAL]   [error: Your local changes to the following files would be overwritten by checkout:<br/>\tclient/package-lock.json<br/>Please commit your changes or stash them before you switch branches.<br/>Aborting]<br/>```<br/>Settings of the app:<br/>```<br/>name: Lint<br/><br/>on:<br/>  push:<br/>    branches: [master]<br/>  pull_request:<br/>    branches-ignore: []<br/><br/>jobs:<br/>  run-linters:<br/>    name: Run linters<br/>    runs-on: ubuntu-latest<br/><br/>    steps:<br/>      ##########################<br/>      # Clean Workspace #<br/>      ##########################<br/>      - name: Clean Workspace<br/>        uses: AutoModality/action-clean@v1.1.0<br/><br/>      ##########################<br/>      # Checkout the code base #<br/>      ##########################<br/>      - name: Checkout Code<br/>        uses: actions/checkout@v2.3.4<br/>        with:<br/>          # Full git history is needed to get a proper list of changed files within `super-linter`<br/>          fetch-depth: 0<br/>      - name: npm install<br/>        run: cd client/ &amp;&amp; npm i --ignore-scripts<br/><br/>      - name: Super-Linter-on-Client<br/>        uses: docker://ghcr.io/github/super-linter:latest<br/>        env:<br/>          ACTIONS_RUNNER_DEBUG: true<br/>          ERROR_ON_MISSING_EXEC_BIT: true<br/>          VALIDATE_ALL_CODEBASE: false<br/>          DEFAULT_BRANCH: ${{ github.base_ref }}<br/>```<br/>Seeking help from experts about my issues." ]]></description></item><item>	<title>How to make the Super linter smaller and or more effective</title>	<link>https://github.com/github/super-linter/issues/1304</link>	<description><![CDATA[This issue is an open discussion on the options to make the super linter faster, smaller, and easier to use.<br/><br/>## Current Issue<br/>- Image is too large (4+gb)
<br/>- Takes too long to download<br/><br/>## Solutions<br/><br/>### Break into 3 images<br/>- Super-linter<br/>- Super-Linter-Windows<br/>- Super-Linter-Linux<br/><br/>The base `Super-Linter` will stay the same, and house all linters. This is legacy and will prevent users from losing functionality.<br/><br/>The `Super-Linter-Windows` image will have the Windows-based languages and the basic underlying linters. This will still be a larger image as the Windows-based language installs are very heavy...<br/><br/>The `Super-Linter-Linux` will be the main image minus the windows based languages. This should help bring down its size.<br/><br/>This would require a little behind-the-scenes work to host 3 images on DockerHub and GitHub Container Registry.<br/>It would also take a small number of logic updates to make sure testing worked seamlessly.<br/>It would also take a little work to update the deployments.<br/><br/>### Update the Dockerfile<br/>Currently, we try to split all the language installs apart in the Dockerfile for readability and user understanding. This creates additional layers and adds size to the image. We could optimize the `Dockerfile` for size and not readability and likely pull down the size as well. Removing more layers= smaller image?<br/><br/>### Multi-Stage build of Dockerfile<br/>This would likely require a fair amount of work on the `Dockerfile` and the build process. We would need to go through the image layer by layer and pull in only the libs we truly need. This could greatly pull down the size of the image as well but will require deep Docker knowledge and extensive testing...<br/><br/>## Conclusions<br/>All have their Pros and Cons... But we need to have an open discussion on this to make sure we are all on board and take the proper direction(s)
.<br/><br/>" ]]></description></item><item>	<title>Super-linter algorithm for finding changed files is broken</title>	<link>https://github.com/github/super-linter/issues/1167</link>	<description><![CDATA[## Describe the bug<br/><br/>`git diff-tree` used by linter on `push` checks only files from the last commit and regardless of files status, so deleted or renamed files are also checked.  <br/><br/>There are now 2 different `git` commands used for finding the list of broken files (find them here: https://github.com/github/super-linter/blob/v3.14.4/lib/functions/buildFileList.sh#L59-L105)
. `git diff-tree` is used on `push`, `git diff` is used otherwise. A separate behaviour for push was added in #905 and follow-up #1049 to fix push to a default branch. But it seems working only in rare special cases: only one commit is pushed and no files are deleted. Otherwise wrong list is reported.<br/><br/>## Expected behavior<br/><br/>All changed non-deleted files from all commits added on top of the default branch should be checked, deleted files should be ignored.<br/><br/>## Steps to Reproduce<br/><br/>Here are the steps to reproduce within git (super-linter is not involved.<br/><br/>Adding first file, everything works fine:<br/>```bash<br/>+ git log --oneline master...465e71b<br/>465e71b (HEAD -> test)
 Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 465e71b<br/>test/test1.txt<br/><br/>+ git diff --name-only master...465e71b --diff-filter=d<br/>test/test1.txt<br/>```<br/><br/>Now adding the second file in a separate commit, `diff git-tree` reports only the last file - only files changed in the last commit:<br/>```bash<br/>+ git log --oneline master...1c3d652<br/>1c3d652 (HEAD -> test)
 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 1c3d652<br/>test/test2.txt<br/><br/>+ git diff --name-only master...1c3d652 --diff-filter=d<br/>test/test1.txt<br/>test/test2.txt<br/>```<br/><br/>Renaming first file, `git diff-tree` reports again only files from the last commit and as another issue - reports deleted file as well:<br/>```bash<br/>+ git log --oneline master...f5617a2<br/>f5617a2 (HEAD -> test)
 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r f5617a2<br/>test/test1.txt<br/>test/test3.txt<br/><br/>+ git diff --name-only master...f5617a2 --diff-filter=d<br/>test/test2.txt<br/>test/test3.txt<br/>```<br/><br/>Now deleting the second file, `git diff-tree` reports only this deleted file:<br/>```shell<br/>+ git log --oneline master...ee90eaf<br/>ee90eaf (HEAD -> test)
 Remove test2.txt<br/>f5617a2 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r ee90eaf<br/>test/test2.txt<br/><br/>+ git diff --name-only master...ee90eaf --diff-filter=d<br/>test/test3.txt<br/>```<br/><br/>## Additional context<br/><br/>Right now `git diff` command looks better for all cases except finding changes for a push to a `DEFAULT_BRANCH` (the case described in #900)
. I'd say `git diff` should be used instead of the other command, or `git diff-tree` needs to be called with a right list of parameters. <br/><br/>I don't have suggestions on how better to fix the original issue from #900. If there needs to be a special code condition for that case maybe it should be checking not only git `push` event but also if current branch is a `DEFAULT_BRANCH`. <br/><br/>This project really needs testing for the \"get diff files list\" behaviour. It was broken couple of times already. Having wrong files checked is really disappointing. What makes it even more disappointing is that you often don't even realize this. With current broken behaviour wrong files were linted in the last 3 months when `push` event was used. I believe that's quite a lot of people and projects since this setup is recommended by super-linter readme :cry: <br/><br/>Additional tough thing is that it's impossible to debug \"get diff files list\" in local, since `VALIDATE_ALL_CODEBASE=true` behaviour is used in that case. " ]]></description></item><item>	<title>Support the GitHub Checks Run UI</title>	<link>https://github.com/github/super-linter/issues/151</link>	<description><![CDATA[**Is your feature request related to a problem? Please describe.**<br/>After the super-linters runs, you have to go to the workflow logs, and then the step, and look at the logs, to see the errors that were found. This is not ideal and error-prone. <br/><br/>**Describe the solution you'd like**<br/>A better approach would be to use the  <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Checks Run UI</a> 

 to report the errors directly into the PR/code lines, to better visibility.<br/><br/>**Describe alternatives you've considered**<br/>Other linters already do this like https://github.com/andrewmcodes/rubocop-linter-action and https://github.com/devmasx/brakeman-linter-action<br/><br/>**Additional context**<br/>I think this is a really big feature, but it will also improve a lot the super-linter, and we could leverage how others already do it.<br/><br/>" ]]></description></item><item>	<title>C++ support</title>	<link>https://github.com/github/super-linter/issues/135</link>	<description><![CDATA[**Is your feature request related to a problem? Please describe.**<br/><br/>`super-linter` does not support C++<br/><br/>**Describe the solution you'd like**<br/><br/>Use `super-linter` to lint C++ code<br/><br/>**Describe alternatives you've considered**<br/><br/>Running `clang-tidy` and `clazy` yourself through custom run steps<br/><br/>" ]]></description></item><item>	<title>Add forms section to guide</title>	<link>https://github.com/github/view_component/issues/908</link>	<description><![CDATA[### Problem statement<br/><br/>While we _do_ share that ViewComponents don't work well with `form_for`, this information is hard to find under `known issues`. There is no suggested alternative or approach.<br/><br/>### Proposed solution<br/><br/>Add a `Forms` section to the guide:<br/><br/>- [ ] Include existing disclaimer about `form_for` compatibility<br/>- [ ] Add direction towards using `_tag` helpers (?)
" ]]></description></item><item>	<title>Document how component and template interact</title>	<link>https://github.com/github/view_component/issues/907</link>	<description><![CDATA[### Problem statement<br/><br/>As a consumer of ViewComponent, it can be difficult to understand the functional relationship between the component and template:<br/><br/>- Are instance variables from the component accessible in the template?<br/>- What about instance methods?<br/>- Do instance methods need to be public to be accessible in the template?<br/>- What helpers are accessible?<br/><br/>### Proposed solution<br/><br/>Add an explanation, potentially as an entirely new page? (`Encapsulation`?)
" ]]></description></item><item>	<title>Add documentation for why ViewComponents are faster than partials</title>	<link>https://github.com/github/view_component/issues/906</link>	<description><![CDATA[### Problem<br/><br/>Our benchmarks show that ViewComponents can be _much_ faster than traditional Rails partials. This is a bold statement. When making it, we should also provide an explanation of why this is the case, for the sake of credibility.<br/><br/>### Proposed solution<br/><br/>Flesh out https://viewcomponent.org/motivation.html#performance with more detail." ]]></description></item><item>	<title>Provide a better demo application experience</title>	<link>https://github.com/github/view_component/issues/905</link>	<description><![CDATA[### Problem<br/><br/>I wrote https://github.com/joelhawksley/view-component-demo as an early demo of how to use ViewComponent. I don't keep it up to date and it doesn't showcase much of what ViewComponent can do.<br/><br/>### Proposed solution<br/><br/>Provide a demo Rails application that showcases ViewComponent's features. Perhaps we could use the app we have in `test`? Or maybe we could use ViewComponent previews?" ]]></description></item><item>	<title>Add paved path for unit testing components with behaviors</title>	<link>https://github.com/github/view_component/issues/904</link>	<description><![CDATA[### Problem statement<br/><br/>> How have y'all at Github approached testing view components that have an interactive component to them? We've mainly been unit testing each view component we add and then writing feature specs for browser interactions, but I'm wondering if there is a better way to approach it - RailsConf Q&amp;A<br/><br/>### Proposed solution<br/><br/>In Primer ViewComponents, we use system tests powered by cuprite and ViewComponent Previews for testing behaviors. As this approach matures, we should aim to move of much of it as possible into ViewComponent.<br/>" ]]></description></item><item>	<title>Add practical documentation</title>	<link>https://github.com/github/view_component/issues/903</link>	<description><![CDATA[### Problem<br/><br/>Our documentation covers how to build ViewComponents themselves, but it doesn't cover how to build component-driven UI. While this is definitely a more subjective area than the existing documentation, I think that it's worth covering how one might go about architecting UIs in ViewComponents.<br/><br/>### Solution<br/><br/>Add a separate section to the documentation for this kind of documentation.<br/><br/>- [ ] Use example components from Primer ViewComponents and GitHub.com<br/>- [ ] Use example tests from Primer ViewComponents and GitHub.com" ]]></description></item><item>	<title>Embed contributing and changelog pages into docs</title>	<link>https://github.com/github/view_component/issues/902</link>	<description><![CDATA[### Problem<br/><br/>As a visitor to the docs site, I'm not able to easily find the change log and contribution guidelines.<br/><br/>### Proposed solution<br/><br/>Symlink both pages into the docs site so they are rendered at the bottom of the sidebar." ]]></description></item><item>	<title>Simplify sidecar assets page</title>	<link>https://github.com/github/view_component/issues/901</link>	<description><![CDATA[### Problem<br/><br/>In its current form, the Sidecar Assets page (https://viewcomponent.org/guide/sidecar_assets.html)
 is quite wordy and difficult to follow. The examples are longer than they need to be.<br/><br/>### Proposed solution<br/><br/>Simplify the language and examples on the sidecar assets page." ]]></description></item><item>	<title>Add basic example to docs landing page</title>	<link>https://github.com/github/view_component/issues/900</link>	<description><![CDATA[### Problem<br/><br/>Currently, the documentation landing page (https://viewcomponent.org)
 does not give folks new to the framework an idea of what it accomplishes.<br/><br/>>  I think we could put a really convincing example there showing off some of the features of view components as well as the value they provide. - @BlakeWilliams<br/><br/>### Proposed solution<br/><br/>Add (or maybe just move)
 a basic example to the landing page. Perhaps we could move some of https://viewcomponent.org/guide/?" ]]></description></item><item>	<title>Add lifecycle diagram to documentation</title>	<link>https://github.com/github/view_component/issues/899</link>	<description><![CDATA[Understanding the lifecycle of a ViewComponent, from compilation to rendering, and all of the API methods called along the way, is important to working with ViewComponents effectively, especially for more advanced use cases.<br/><br/>https://twitter.com/dan_abramov/status/981712092611989509/photo/1 is a good example of what we might want to mimic." ]]></description></item><item>	<title>Add documentation for variants</title>	<link>https://github.com/github/view_component/issues/898</link>	<description><![CDATA[Per https://github.com/github/view_component/issues/505#issuecomment-808273844, let's add a documentation page under Building ViewComponents on how and when to use Variants.<br/><br/>cc @Spone " ]]></description></item><item>	<title>Add Generators page to documentation</title>	<link>https://github.com/github/view_component/issues/897</link>	<description><![CDATA[As an improvement to the documentation site, let's add a page that describes all of the generator configuration in one place.<br/><br/>**TODO**<br/><br/>- [ ] Include item on how to generate a sidecar folder<br/><br/>Might you be up for writing this @Spone?" ]]></description></item><item>	<title>Error message helpfulness</title>	<link>https://github.com/github/view_component/issues/896</link>	<description><![CDATA[## Feature request<br/><br/>As a consumer of the ViewComponent framework, I want to receive actionable feedback when an error is raised. For every error message, I should be provided with directions on how it might be resolved, and if relevant, a link to more documentation. <br/><br/>As part of this ticket, we should add all error messages to the API documentation.<br/><br/>### Motivation<br/><br/>In my research on writing technical documentation, several resources recommended providing documentation for all framework-defined error messages, including the actual text of the message, so that if people Google for the message, they are lead to the documentation site.<br/>" ]]></description></item><item>	<title>Jekyll support</title>	<link>https://github.com/github/view_component/issues/895</link>	<description><![CDATA[## Feature request<br/><br/>It would be lovely if we could support rendering ViewComponents in Jekyll, as it would enable the reuse of ViewComponents across static and dynamic (Rails-based)
 sites.<br/><br/>### Motivation<br/><br/>We've built out an extensive library of ViewComponents for the Primer design system, but they are currently only able to be used in Rails applications. It would be great to be able to use them in Jekyll sites as well." ]]></description></item><item>	<title>Instrumentation (ActiveSupport notifications)
</title>	<link>https://github.com/github/view_component/issues/893</link>	<description><![CDATA[## Feature request<br/><br/>Add ActiveSupport notifications support (`render.view_component`?)
.<br/><br/>### Motivation<br/><br/>Instrumentation could be useful for different reasons:<br/>- Measuring rendering performance (APM-like stuff)
<br/>- Performing runtime analysis: e.g., detect unused components, build component dependency trees (could be used for caching)
.<br/><br/>Since ViewComponent aims to be as performant as possible, this feature could be opt-in (e.g., `ActiveSupport.on_load(:view_component)
 { include ViewComponent::Instrumentation }` or whatever)
.<br/>" ]]></description></item><item>	<title>Add a `--stimulus` flag to generate a Stimulus controller for the component</title>	<link>https://github.com/github/view_component/issues/627</link>	<description><![CDATA[## Feature request<br/><br/>As documentation mentions how to use Stimulus (see #481 and #485)
, I figured we could go a step further by adding  <a href="https://stimulus.hotwire.dev">Stimulus</a> 

 support to the component generator.<br/><br/>Similar to `--inline` or `--sidecar`, it would be nice to allow a `--stimulus flag` when working with Stimulus:<br/><br/>```<br/>bin/rails generate component Example --stimulus                 <br/>Running via Spring preloader in process 15839<br/>      create  app/components/example_component.rb<br/>      invoke  test_unit<br/>      create    test/components/example_component_test.rb<br/>      invoke  slim<br/>      create    app/components/example_component.html.slim<br/>      create    app/components/example_component_controller.js<br/>```<br/><br/>The content of the generated file (`app/components/example_component_controller.js`)
 could be:<br/><br/>```js<br/>import { Controller } from \"stimulus\";<br/><br/>export default class extends Controller {<br/>  connect()
 {<br/>    console.log(\"Hello, Stimulus!\", this.element)
;<br/>  }<br/>}<br/>```<br/><br/>It would also be great if the generated template could include the correct `data-controller` attribute (the `parameterize`d name of the component, using `--` as a separator is the component is namespaced)
.<br/><br/>### Motivation<br/><br/>When adding a Stimulus controller to a component, you have to create the controller JS file and them add some boilerplate in it, then you have to add the `data-controller` attribute to the component root. This feature would make it faster by automating these two steps." ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Add Racket support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/200</link>	<description><![CDATA[It would be nice if support for Racket and DrRacket would be added. Please consider it, thx :smile: <br/>http://racket-lang.org/<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Add: Lazarus IDE and FPC</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/149</link>	<description><![CDATA[Please, add this great RAD solution. It can compile to different targets and architectures.<br/>The version provided in the USC it is old and conflicts with new versions.<br/>http://www.lazarus-ide.org/<br/>" ]]></description></item><item>	<title>Support for Mono and Mono Develop</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/94</link>	<description><![CDATA[It would be nice if support for Mono and Mono Develop would be added. Please consider it :)
<br/>" ]]></description></item><item>	<title>Add Perl support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/85</link>	<description><![CDATA[Please also add Perl support via perlbrew/plenv and Padre as IDE.<br/>" ]]></description></item><item>	<title>Yaru in Emerald</title>	<link>https://github.com/ubuntu/yaru/issues/2795</link>	<description><![CDATA[Hello, I use Emerald as a selector window decorator, could someone make a theme for it? If there is one, could you pass it on to me?" ]]></description></item><item>	<title>Support theming the xfce desktop</title>	<link>https://github.com/ubuntu/yaru/issues/2770</link>	<description><![CDATA[Create themes for Canela and XFCE and create Yaru-dark icons." ]]></description></item></channel></rss>
