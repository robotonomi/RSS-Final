<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Move from AppVeyor to GitHub Actions</title>	<link>https://github.com/github/certstore/issues/19</link>	<description><![CDATA[This file should be migrated to GitHub Actions: https://github.com/github/certstore/blob/main/.appveyor.yml" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Add Free Art License</title>	<link>https://github.com/github/choosealicense.com/issues/314</link>	<description><![CDATA[ <a href="http://artlibre.org/licence/lal/en/">Free Art License 1.3</a> 

<br/>" ]]></description></item><item>	<title>Internationalization / i18n / multilingual site</title>	<link>https://github.com/github/choosealicense.com/issues/68</link>	<description><![CDATA[Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62<br/><br/>We already have the bulk of the strings in a single file (`_config.yml`)
, so it should just be a matter of abstracting out some of our variables, as far as I can tell.<br/><br/>Would love to take this on starting in August if there's interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons learned form https://github.com/CMSgov/healthcare.gov.<br/><br/>@parkr any interest?<br/>@dhcole any insight / words of wisdom?<br/>" ]]></description></item><item>	<title>Add details of how to embed images</title>	<link>https://github.com/github/docs/issues/8964</link>	<description><![CDATA[### What article(s)
 is affected?<br/><br/>https://docs.github.com/en/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax <br/><br/>Markdown file:  <a href="https://github.com/github/docs/blob/main/content/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax.md">content/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax.md</a> 

<br/><br/>### Briefly summarize the problem with the docs and its impact on GitHub's users.<br/><br/>The docs don't explain how to embedded images in markdown files. This has caused users problems when they use a full URL to embed an image in a private repository because this only works if the image is publicly available. Where possible you should always use a relative path to the image.<br/><br/>### Describe the desired docs changes and the problem they solve for customers.<br/><br/>In the \" <a href="https://docs.github.com/en/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#relative-links">Basic writing and formatting syntax</a> 

\" article, add a new section \"Images\" after the \" <a href="https://docs.github.com/en/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#relative-links">Relative links</a> 

\" section.<br/><br/>Explain how to embed an image using the syntax:<br/><br/>```<br/>! <a href="relative/path/to/image">alt text for image</a> 

<br/>```<br/><br/>For example, where the image is in a `screenshots` directory at the root of the repository you could use:<br/><br/>```<br/>! <a href="/screenshots/new-issue-button.png">New issue button</a> 

<br/>```<br/><br/>### Who does this affect?<br/><br/>All dotcom users<br/><br/>### What is the impact to users?<br/><br/>If a user embeds an image in a markdown file in a private repository, using the full URL of that image in the private repository, the image won't be shown even though the user has access to the image. <br/><br/>### Other information<br/><br/>Related question on the Internet: https://stackoverflow.com/questions/18937792/github-readme-image-embeds-in-private-repo<br/>" ]]></description></item><item>	<title>Explain how to handle skipped required checks</title>	<link>https://github.com/github/docs/issues/8926</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's Code of Conduct.<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://github.com/github/docs/blob/2289ca70c7ec7ec1b81eafdb333cd0157fafaa08/content/github/administering-a-repository/troubleshooting-required-status-checks.md<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>A section should be added that explains that if people use `paths` for a required check, they'll want to add a second copy of the check with `paths-ignore` for the same content that just returns `true`.<br/><br/>### Additional information<br/><br/>It's a FAQ in https://github.community" ]]></description></item><item>	<title>Syntax for GitHub's form schema is incorrect with relation to IDs</title>	<link>https://github.com/github/docs/issues/9004</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's Code of Conduct.<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-githubs-form-schema<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>When trialling out the `.yaml` issue form templates, I came across the following error:<br/>! <a href="https://user-images.githubusercontent.com/9111975/128712643-6666f39a-f957-4a6e-8889-2f1f9df21bb6.png">image</a> 

<br/><br/>As you can see, it states that: `body[0]: id is not a permitted attribute.`<br/><br/>Yet here: https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-githubs-form-schema#attributes-4, `id` is explicitly an allowed attribute. If I move the ID to the `type/attributes` level of the `checkboxes` entry I get:<br/><br/>! <a href="https://user-images.githubusercontent.com/9111975/128712894-1e50987e-c6e1-440b-b390-debf09387ebb.png">image</a> 

<br/><br/>The same also happens on `dropdown` types:<br/><br/>! <a href="https://user-images.githubusercontent.com/9111975/128713143-9acb088f-6732-4ce2-adec-8352104b7094.png">image</a> 

<br/><br/>I would assume the same is for all types that have `id` listed as an attribute.<br/><br/>### Additional information<br/><br/>I'd be happy to raise a PR to change the docs, but I'm not sure if the docs are right and the implementation is wrong, or the implementation is right and the docs are wrong 😄 " ]]></description></item><item>	<title>Add \"Create issue from discussion\" information to docs</title>	<link>https://github.com/github/docs/issues/8818</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's Code of Conduct.<br/><br/>### What article on docs.github.com is affected?<br/><br/>I think the whole Discussions thing itself is still in _beta_, so I don't know if I should expect this to be documented in full???<br/><br/>I would (normally)
 expect a section on \"Creating an issue from a discussion to be in this article:<br/><br/>https://docs.github.com/en/issues/tracking-your-work-with-issues/creating-an-issue<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>Add section `Creating an issue from a discussion`.<br/>Add this section heading to the article's sidebar<br/>Add picture of the button/interface to the article<br/><br/>Explain workflow to Create issue from a discussion (I think clicking the button is enough)
.<br/>Explain the rights needed (I think you need at least `triage` level rights, but I'm not 100% on this!)
<br/><br/>### Additional information<br/><br/>See this screenshot with the arrow to see what button I'm talking about. 😉 <br/><br/>! <a href="https://user-images.githubusercontent.com/34918129/128310769-6dfbb7c7-c783-4875-b8d1-d86804ef3ab2.png">screenshot_create_issue_from_discussion_button</a> 

" ]]></description></item><item>	<title>Clarify what all sources are supported for Terraform Dependency Updates</title>	<link>https://github.com/github/docs/issues/8419</link>	<description><![CDATA[<!--<br/>HUBBERS BEWARE! THE GITHUB/DOCS REPO IS PUBLIC TO THE ENTIRE INTERNET. OPEN AN ISSUE IN GITHUB/DOCS-CONTENT INSTEAD.<br/>--><br/><br/><!--<br/>For questions, ask in Discussions: https://github.com/github/docs/discussions<br/><br/>Before you file an issue read the:<br/>- Code of Conduct: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md<br/>- Contributing guide: https://github.com/github/docs/blob/main/CONTRIBUTING.md<br/><br/>Check to make sure someone hasn't already opened a similar issue: https://github.com/github/docs/issues<br/>--><br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>Terraform section.<br/><br/>### Additional information<br/><br/>Terraform supports the  <a href="https://www.terraform.io/docs/language/modules/sources.html">following sources</a> 

:<br/><br/>  *  <a href="#local-paths">Local paths</a> 

<br/>  *  <a href="#terraform-registry">Terraform Registry</a> 

<br/>  *  <a href="#github">GitHub</a> 

<br/>  *  <a href="#bitbucket">Bitbucket</a> 

<br/>  * Generic  <a href="#generic-git-repository">Git</a> 

,  <a href="#generic-mercurial-repository">Mercurial</a> 

 repositories<br/>  *  <a href="#http-urls">HTTP URLs</a> 

<br/>  *  <a href="#s3-bucket">S3 buckets</a> 

<br/>  *  <a href="#gcs-bucket">GCS buckets</a> 

<br/>  *  <a href="#modules-in-package-sub-directories">Modules in Package Sub-directories</a> 

<br/><br/>Out of these, it is very unclear which all are supported by Dependabot.<br/><br/>---<br/>## Update following discussion below<br/><br/>### Answer<br/><br/>For anyone else with the same question, the answer was:<br/><br/>> Dependabot can be used to manage version updates for dependencies that are stored in GitHub for all the  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/about-dependabot-version-updates#supported-repositories-and-ecosystems">supported package managers</a> 

. In addition, for some package managers, you can include a `registries` section in your configuration file to allow access to private registries. This is supported for Terraform, see  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates#configuration-options-for-private-registries">Configuration options for private registries</a> 

.<br/><br/>> If you need to access dependencies in git hosted by other services, like GitLab and BitBucket, you can add the `git` option to your `registries` section. See  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates#configuration-options-for-private-registries">Configuration options for dependency updates</a> 

.<br/><br/>### Content design plan<br/><br/>\"Supported repositories and ecosystems\" section of  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/about-dependabot-version-updates#supported-repositories-and-ecosystems">About Dependabot version updates</a> 

<br/>  - [ ] Update the introduction  to mention that dependencies in private registeries are also supported (similar to the mention of vendored dependencies)
.<br/>  - [ ] Update the link to the article with configuration options - link to both the `#vendor` anchor and also the `#registries` anchor.<br/><br/>\"`package-ecosystem`\" section of  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates#package-ecosystem">Configuration options for dependency updates</a> 

<br/>  - [ ] Add a brief sentence, similar to that for `vendor` mentioning private registries and linking to `registries`.<br/><br/>\"Configuration options for private registries\" section of  <a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates#package-ecosystem">Configuration options for dependency updates</a> 

<br/>  - [ ] Add a brief sentence to the first paragraph, mentioning that you can give Dependabot access to private package registries hosted by GitLab or Bitbucket by specifying a `type` of `git` and linking to `git`." ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! 😸 " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Investigate semantic-rust macro tests</title>	<link>https://github.com/github/semantic/issues/553</link>	<description><![CDATA[@p-alik has graciously added the `semantic-rust` package but we've had to exclude some macro corpus tests due to parsing issues.<br/><br/>See https://github.com/github/semantic/pull/551 for details." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>Comment errors</title>	<link>https://github.com/github/super-linter/issues/1840</link>	<description><![CDATA[I want super-linter to create pull request comments about the result of linters that caused errors.<br/>If super-linter can do it, linter errors will be easier to see." ]]></description></item><item>	<title>Super-linter algorithm for finding changed files is broken</title>	<link>https://github.com/github/super-linter/issues/1167</link>	<description><![CDATA[## Describe the bug<br/><br/>`git diff-tree` used by linter on `push` checks only files from the last commit and regardless of files status, so deleted or renamed files are also checked.  <br/><br/>There are now 2 different `git` commands used for finding the list of broken files (find them here: https://github.com/github/super-linter/blob/v3.14.4/lib/functions/buildFileList.sh#L59-L105)
. `git diff-tree` is used on `push`, `git diff` is used otherwise. A separate behaviour for push was added in #905 and follow-up #1049 to fix push to a default branch. But it seems working only in rare special cases: only one commit is pushed and no files are deleted. Otherwise wrong list is reported.<br/><br/>## Expected behavior<br/><br/>All changed non-deleted files from all commits added on top of the default branch should be checked, deleted files should be ignored.<br/><br/>## Steps to Reproduce<br/><br/>Here are the steps to reproduce within git (super-linter is not involved.<br/><br/>Adding first file, everything works fine:<br/>```bash<br/>+ git log --oneline master...465e71b<br/>465e71b (HEAD -> test)
 Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 465e71b<br/>test/test1.txt<br/><br/>+ git diff --name-only master...465e71b --diff-filter=d<br/>test/test1.txt<br/>```<br/><br/>Now adding the second file in a separate commit, `diff git-tree` reports only the last file - only files changed in the last commit:<br/>```bash<br/>+ git log --oneline master...1c3d652<br/>1c3d652 (HEAD -> test)
 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 1c3d652<br/>test/test2.txt<br/><br/>+ git diff --name-only master...1c3d652 --diff-filter=d<br/>test/test1.txt<br/>test/test2.txt<br/>```<br/><br/>Renaming first file, `git diff-tree` reports again only files from the last commit and as another issue - reports deleted file as well:<br/>```bash<br/>+ git log --oneline master...f5617a2<br/>f5617a2 (HEAD -> test)
 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r f5617a2<br/>test/test1.txt<br/>test/test3.txt<br/><br/>+ git diff --name-only master...f5617a2 --diff-filter=d<br/>test/test2.txt<br/>test/test3.txt<br/>```<br/><br/>Now deleting the second file, `git diff-tree` reports only this deleted file:<br/>```shell<br/>+ git log --oneline master...ee90eaf<br/>ee90eaf (HEAD -> test)
 Remove test2.txt<br/>f5617a2 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r ee90eaf<br/>test/test2.txt<br/><br/>+ git diff --name-only master...ee90eaf --diff-filter=d<br/>test/test3.txt<br/>```<br/><br/>## Additional context<br/><br/>Right now `git diff` command looks better for all cases except finding changes for a push to a `DEFAULT_BRANCH` (the case described in #900)
. I'd say `git diff` should be used instead of the other command, or `git diff-tree` needs to be called with a right list of parameters. <br/><br/>I don't have suggestions on how better to fix the original issue from #900. If there needs to be a special code condition for that case maybe it should be checking not only git `push` event but also if current branch is a `DEFAULT_BRANCH`. <br/><br/>This project really needs testing for the \"get diff files list\" behaviour. It was broken couple of times already. Having wrong files checked is really disappointing. What makes it even more disappointing is that you often don't even realize this. With current broken behaviour wrong files were linted in the last 3 months when `push` event was used. I believe that's quite a lot of people and projects since this setup is recommended by super-linter readme :cry: <br/><br/>Additional tough thing is that it's impossible to debug \"get diff files list\" in local, since `VALIDATE_ALL_CODEBASE=true` behaviour is used in that case. " ]]></description></item><item>	<title>Previews: Sample source code doesn't show if view used</title>	<link>https://github.com/github/view_component/issues/1029</link>	<description><![CDATA[### Steps to reproduce<br/><br/>1. Set `config.view_component.show_previews_source = true`<br/>2. Create a preview i.e.<br/>    `test/components/previews/alert_preview.rb`<br/>    ```ruby<br/>    class AlertPreview < ViewComponent::Preview<br/>      def info<br/>        render Alert.new(type: :info, message: 'This is a info alert.')
<br/>      end<br/>    end<br/>    ```<br/>3. Navigate to preview e.g. `/rails/view-components/alert/info`<br/>4. See that sample source code is correctly shown under the component preview<br/>5. Move the preview into an ERB file as-per  <a href="https://github.com/github/view_component/blob/main/docs/guide/previews.md#preview-templates">docs</a> 

 i.e.<br/>    `test/components/previews/alert_preview.rb`<br/>    ```ruby<br/>    class AlertPreview < ViewComponent::Preview<br/>      def info; end<br/>    end<br/>    ```<br/>    `test/components/previews/alert_preview/info.html.erb`<br/>    ```erb<br/>    <%= render Alert.new(type: :info, message: 'This is a info alert')
 %><br/>    ```<br/>6. Navigate to preview e.g. `/rails/view-components/alert/info`<br/>7. See that sample source code is **not** show under the component preview<br/><br/>### Expected behavior<br/><br/>When I enable `config.view_component.show_previews_source` I expect the sample source code to show under the component preview regardless of how the preview files are structured.<br/><br/>### Actual behavior<br/><br/>**When a view file is used for the preview** if `config.view_component.show_previews_source = true` is set the sample source code is not shown under the component preview.<br/><br/>### Further details<br/><br/>**When a view file is used for the preview** this gem's `app/views/view_components/preview.html.erb` is not used to render the page, instead only the view file e.g. `test/components/previews/alert_preview/info.html.erb` is rendered that doesn't include the sample source code output: https://github.com/github/view_component/blob/fe121163f6d4d2962e6c3e16a3d83296f3ce4f77/app/views/view_components/preview.html.erb#L7-L9<br/><br/>I guess ideally the content of `test/components/previews/alert_preview/info.html.erb` would be loaded into `app/views/view_components/preview.html.erb` so that `app/views/view_components/preview.html.erb` can be relied upon as the template for all previews?<br/><br/>This issue also means I can't easily set the `<title>` of the \"show preview\" page as if I set this in `app/views/view_components/preview.html.erb` it will only apply if a view file isn't being used for the preview.<br/><br/>### System configuration<br/>**Rails version**: 6.1.4<br/><br/>**Ruby version**: 2.7.4<br/><br/>**Gem version**: 2.36.0" ]]></description></item><item>	<title>`render_to_string` not working when upgrading to Rails 6.1</title>	<link>https://github.com/github/view_component/issues/988</link>	<description><![CDATA[### Discussed in https://github.com/github/view_component/discussions/966<br/><br/><div type='discussions-op-text'><br/><br/><sup>Originally posted by **oboxodo** June 15, 2021</sup><br/>Hi there 👋 ,<br/><br/>I'm upgrading a big app from Rails 6.0 to 6.1. We use `ViewComponent` v2.34.0.<br/><br/>After upgrading one of our tests fails because some code like `my_html = render_to_string(MyViewComponent.new)
` is returning an empty string (`\"\"`)
 instead of the rendered component.<br/><br/>I understand Rails 6.1 should support `ViewComponent` nativelly and it does when using `render`, but apparently not when using `render_to_string`. After looking at  <a href="https://github.com/github/view_component/blob/460d7431e321bbb9694bc007a6a567c6ba4778ff/lib/view_component/render_to_string_monkey_patch.rb#L7">the monkey patch for version < 6.1</a> 

 I was able to make it work with `my_html = MyViewComponent.new.render_in(view_context)
`.<br/><br/>But shouldn't `render_to_string` still work? Or at least be mentioned in the docs? Did I miss something? Is this the best place to get what I want?<br/><br/>Thanks!</div>" ]]></description></item><item>	<title>MacOS - cannot generate a 'microk8s inspect'</title>	<link>https://github.com/ubuntu/microk8s/issues/2508</link>	<description><![CDATA[- macOS Big Sur 11.5.1<br/>- microk8s 2.1.0 installed from home-brew today<br/>- 'microk8s inspect' not working (will raise a different issue on this)
<br/>- Additional features installed including 'dashboard' (no apps/customization yet)
<br/><br/>Experienced an issue #2507 so went to gather output from 'microk8s inspect'.<br/><br/>However whilst this seemed to work, no file output was evident (could be long location, in vm etc...)
<br/><br/>```<br/>jonesn:~/ $ microk8s inspect                                                                                                                                   [17:26:32]<br/>Inspecting Certificates<br/>Inspecting services<br/>  Service snap.microk8s.daemon-cluster-agent is running<br/>  Service snap.microk8s.daemon-containerd is running<br/>  Service snap.microk8s.daemon-apiserver-kicker is running<br/>  Service snap.microk8s.daemon-kubelite is running<br/>  Copy service arguments to the final report tarball<br/>Inspecting AppArmor configuration<br/>Gathering system information<br/>  Copy processes list to the final report tarball<br/>  Copy snap list to the final report tarball<br/>  Copy VM name (or none)
 to the final report tarball<br/>  Copy disk usage information to the final report tarball<br/>  Copy memory usage information to the final report tarball<br/>  Copy server uptime to the final report tarball<br/>  Copy current linux distribution to the final report tarball<br/>  Copy openSSL information to the final report tarball<br/>  Copy network configuration to the final report tarball<br/>Inspecting kubernetes cluster<br/>  Inspect kubernetes cluster<br/>Inspecting juju<br/>  Inspect Juju<br/>Inspecting kubeflow<br/>  Inspect Kubeflow<br/><br/>Building the report tarball<br/>  Report tarball is at /var/snap/microk8s/2346/inspection-report-20210809_172728.tar.gz<br/>jonesn:~/ $ cp /var/snap/microk8s/2346/inspection-report-20210809_172728.tar.gz ~                                                                              [17:27:28]<br/>cp: /var/snap/microk8s/2346/inspection-report-20210809_172728.tar.gz: No such file or directory<br/>jonesn:~/ $ sudo cp /var/snap/microk8s/2346/inspection-report-20210809_172728.tar.gz ~                                                                         [17:27:33]<br/>Password:<br/>cp: /var/snap/microk8s/2346/inspection-report-20210809_172728.tar.gz: No such file or directory<br/>jonesn:~/ $<br/>```<br/>" ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Add Racket support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/200</link>	<description><![CDATA[It would be nice if support for Racket and DrRacket would be added. Please consider it, thx :smile: <br/>http://racket-lang.org/<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Add: Lazarus IDE and FPC</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/149</link>	<description><![CDATA[Please, add this great RAD solution. It can compile to different targets and architectures.<br/>The version provided in the USC it is old and conflicts with new versions.<br/>http://www.lazarus-ide.org/<br/>" ]]></description></item><item>	<title>Support for Mono and Mono Develop</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/94</link>	<description><![CDATA[It would be nice if support for Mono and Mono Develop would be added. Please consider it :)
<br/>" ]]></description></item><item>	<title>Add Perl support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/85</link>	<description><![CDATA[Please also add Perl support via perlbrew/plenv and Padre as IDE.<br/>" ]]></description></item></channel></rss>
