<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://robotonomi.github.io/workspace/feed.xml</link><item>	<title>Add Carthage compatibility badge to the README</title>	<link>https://github.com/github/Archimedes/issues/38</link>	<description><![CDATA[Using  <a href="https://github.com/Carthage/Carthage/blob/7a0153cc164e301c46527f6e20c886728a0dc218/README.md#declare-your-compatibility">these instructions</a> 

.<br/>" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>Annotating license texts with license rules</title>	<link>https://github.com/github/choosealicense.com/issues/441</link>	<description><![CDATA[ <a href="https://github.com/github/choosealicense.com/pull/320#issuecomment-230746990">Comment/question today</a> 

 about whether EUPL-1.1 is accurately described reminded me to file this enhancement idea.<br/><br/>For each license, license rules could be annotated with ranges of text in the license pertinent to the rule. Highlighting of ranges could be turned on/off on individual license pages by selecting in the license rules (permissions/conditions/limitations)
 table. Very crude mockup taking a very simple case (the one condition of MIT)
.<br/><br/>! <a href="https://cloud.githubusercontent.com/assets/40415/16633043/25735510-437c-11e6-84f8-1e504d48f345.png">mit-highlight-condition</a> 

<br/><br/>Obviously this is not a big help for MIT, but for longer licenses, it can be tricky to figure out what bits of the license are pertinent for a particular rule, at least if you only want to read once, which is more already than I suspect most people do.<br/><br/>Such annotations _might_ be very helpful to \"demystify\" licenses, and creating them might be good QA for choosealicense.com license descriptions.<br/><br/>Probably the simplest way to to annotate would be to have one or more full text extracts for each license for each rule, though there are other ways to do it, inline or  <a href="https://github.com/hypothesis/h/wiki/robust-anchors">out of band</a> 

.<br/><br/>Very low priority, may even be a bad idea, just recording it for now.<br/>" ]]></description></item><item>	<title>Add Free Art License</title>	<link>https://github.com/github/choosealicense.com/issues/314</link>	<description><![CDATA[ <a href="http://artlibre.org/licence/lal/en/">Free Art License 1.3</a> 

<br/>" ]]></description></item><item>	<title>Internationalization / i18n / multilingual site</title>	<link>https://github.com/github/choosealicense.com/issues/68</link>	<description><![CDATA[Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62<br/><br/>We already have the bulk of the strings in a single file (`_config.yml`)
, so it should just be a matter of abstracting out some of our variables, as far as I can tell.<br/><br/>Would love to take this on starting in August if there's interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons learned form https://github.com/CMSgov/healthcare.gov.<br/><br/>@parkr any interest?<br/>@dhcole any insight / words of wisdom?<br/>" ]]></description></item><item>	<title>Dangling `actions-object` anchor links in Check Runs / Create a check run</title>	<link>https://github.com/github/docs/issues/15851</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>https://docs.github.com/en/rest/reference/checks#create-a-check-run--parameters<br/><br/>### What part(s)
 of the article would you like to see updated?<br/><br/>The `actions object` link should work:<br/>> See the  <a href="https://docs.github.com/rest/reference/checks#actions-object">actions object</a> 

 description.<br/><img width=\"722\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2119212/155736487-137efe24-4b2e-4e1c-8192-72387fae7381.png\"><br/><br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>[Improvement]: Document new way to restore a package version in an organization</title>	<link>https://github.com/github/docs/issues/15736</link>	<description><![CDATA[**This issue is reserved for MLH fellow program**<br/><br/>### What article(s)
 is affected?<br/><br/>https://docs.github.com/en/packages/learn-github-packages/deleting-and-restoring-a-package<br/><br/>### Describe the desired docs changes <br/><br/>- \" <a href="https://docs.github.com/en/packages/learn-github-packages/deleting-and-restoring-a-package#package-deletion-and-restoration-support-on-github">Deleting and restoring a package</a> 

\" article<br/>  - Update article's YAML front matter versioning to exclude GitHub Enterprise Server 3.0 and 3.1 (article should only be versioned for `fpt`, `ghec`, `ghes > 3.1`, and `ghae`)
" ]]></description></item><item>	<title>Fix GHES workflow for Authenticating with Desktop docs</title>	<link>https://github.com/github/docs/issues/15735</link>	<description><![CDATA[**This issue is reserved for MLH fellow program**<br/><br/>## What article is affected<br/><br/>Inaccurate documentation of the GHES workflow for  <a href="https://help.github.com/en/desktop/getting-started-with-github-desktop/authenticating-to-github-using-the-browser">authenticating with GitHub desktop</a> 

.<br/><br/>## What are the desired changes in the docs<br/><br/>To close this issue, you'll need to run through the process of connecting to a GitHub Enterprise Server instance with GitHub Desktop. When you pick this up, please let @mattpollard knowâ€”he'll provide access to an instance for you to  <a href="https://github.com/github/docs-content/blob/main/docs-content-docs/docs-content-workflows/testing-the-products/creating-a-github-enterprise-server-instance.md">test with</a> 

!<br/><br/>You'll update the following to close this issue.<br/><br/>- \"Authenticating to GitHub\" article's \" <a href="https://docs.github.com/en/desktop/installing-and-configuring-github-desktop/installing-and-authenticating-to-github-desktop/authenticating-to-github#authenticating-an-account-on-github-enterprise">Authenticating an account on GitHub Enterprise</a> 

\" section<br/>  - Rename section to \"Authenticating an account on GitHub Enterprise Server\" (use variable for \"GitHub Enterprise Server\")
<br/>  - Update step 4<br/>    - Refer to \"an account on your GitHub Enterprise Server instance\" (use variable for \"your GitHub Enterprise Server instance\")
<br/>    - Instruct reader to type the URL for their GitHub Enterprise Server instance (not their credentials ðŸ˜…)
<br/>  - Add a step that describes what happen after clicking **Continue** in step 4<br/>  - Remove references to two-factor authentication via SMS (which isn't possible with GitHub Enterprise Server)
" ]]></description></item><item>	<title>[Improvement]: EMUs org membership types (drop-down)
</title>	<link>https://github.com/github/docs/issues/15733</link>	<description><![CDATA[**This issue is reserved for MLH fellow program**<br/><br/>### What article(s)
 is affected?<br/><br/>- \" <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/user-management/managing-users-in-your-enterprise/viewing-people-in-your-enterprise">Viewing people in your enterprise</a> 

\"<br/>- \" <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/identity-and-access-management/managing-iam-with-enterprise-managed-users/about-enterprise-managed-users">About Enterprise Managed Users</a> 

\"<br/><br/>### Describe the desired docs changes<br/><br/>\" <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/user-management/managing-users-in-your-enterprise/viewing-people-in-your-enterprise">Viewing people in your enterprise</a> 

\"<br/>- Add a new section after \"Viewing dormant users\" called \"Filtering by member type\"<br/>- Note callout that clarifies this is only available if your enterprise uses EMUs<br/>- Brief conceptual paragraph that explains why you'd want to use the Type filter (to see whether a person's membership is managed by an IdP group or they were manually added, so you know how to remove them)
<br/>- Procedure for using the Type filter<br/><br/>\" <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/identity-and-access-management/managing-iam-with-enterprise-managed-users/about-enterprise-managed-users">About Enterprise Managed Users</a> 

\"<br/>- In \"About Enterprise Managed Users\" section, after the paragraph that begins \"Organization membership can be managed manually or updated automatically\", mention that the way a person is added to an organization owned by your enterprise (through IdP groups or manually)
 determines how they must be removed, and that you can determine how a person was added using the Type filter, link to new section" ]]></description></item><item>	<title>[Improvement]: Audit all `{%-` versioning to check whether GHEC versioning is correct</title>	<link>https://github.com/github/docs/issues/15731</link>	<description><![CDATA[**This issue is reserved for MLH fellow program**<br/><br/>### What article(s)
 is affected?<br/><br/>We have quite a few scripts that we run to modify versioning in the docs. There is a bug which suggested that some of them don't account for versioning of the form: `{%- ifversion`.<br/><br/>```<br/>{%- ifversion fpt or ghes > 3.0 or ghae %}<br/>\" <a href="/code-security/secure-coding/about-codeql-code-scanning-in-your-ci-system">About {% data variables.product.prodname_codeql %} {% data variables.product.prodname_code_scanning %} in your CI system</a> 

.\"<br/>{%- else %}<br/>\" <a href="/code-security/secure-coding/running-codeql-runner-in-your-ci-system">Running {% data variables.product.prodname_codeql_runner %} in your CI system</a> 

.\"<br/>{% endif %}<br/>```<br/><br/>It looks as if  <a href="https://github.com/github/docs/blob/main/script/enterprise-server-releases/add-ghec-to-fpt.js">`add-ghec-to-fpt.js`</a> 

 failed to add `ghec` versioning to this condition. This bug means that when users look at the GHEC article they see the wrong link because it's covered by `else`. They should not see a link to the CodeQL runner docs in the first paragraph here:  <a href="https://docs.github.com/en/enterprise-cloud@latest/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning">Configuring code scanning</a> 

<br/><br/>It may be that this is the only article affected, but we should probably check all instances of `{%-` versioning to confirm.<br/><br/>### Content design plan<br/><br/>To close this issue, please review each line of output below. In each line, you'll see a file path and a line number or range of lines. In that file and at that line number, there will be at least one  <a href="https://github.com/github/docs/blob/main/contributing/liquid-helpers.md">Liquid conditional</a> 

 that does not include `ghec` versioning, but should. (Usually this is a line that includes `fpt`â€”in most cases a feature or UI element that's visible for Free, Team, and Pro plans is also visible for GitHub Enterprise Cloud.)
<br/><br/>```bash<br/>content/admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise.md:46-61<br/>content/repositories/releasing-projects-on-github/automatically-generated-release-notes.md:47<br/>content/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule.md:83<br/>content/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph.md:80<br/>content/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning.md:32-38  # Check with @felicitymay and/or @stevecat for the conditions for this note... the body currently links to GitHub Enterprise Cloud documentation from the GitHub Enterprise Server and GitHub AE versions, and I can't tell if that's intended<br/>content/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning.md:171<br/>content/authentication/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication.md:55<br/>content/rest/reference/permissions-required-for-github-apps.md:43<br/>content/rest/reference/permissions-required-for-github-apps.md:127<br/>content/rest/reference/permissions-required-for-github-apps.md:155<br/>content/rest/reference/permissions-required-for-github-apps.md:159<br/>content/rest/reference/permissions-required-for-github-apps.md:162<br/>content/rest/reference/permissions-required-for-github-apps.md:166<br/>content/rest/reference/permissions-required-for-github-apps.md:169<br/>content/rest/reference/permissions-required-for-github-apps.md:172<br/>content/rest/reference/permissions-required-for-github-apps.md:175<br/>content/rest/reference/permissions-required-for-github-apps.md:178<br/>content/rest/reference/permissions-required-for-github-apps.md:183<br/>content/rest/reference/permissions-required-for-github-apps.md:186<br/>content/rest/reference/permissions-required-for-github-apps.md:189<br/>content/rest/reference/permissions-required-for-github-apps.md:225<br/>content/rest/reference/permissions-required-for-github-apps.md:283<br/>content/rest/reference/permissions-required-for-github-apps.md:286<br/>content/rest/reference/permissions-required-for-github-apps.md:289<br/>content/rest/reference/permissions-required-for-github-apps.md:292<br/>content/rest/reference/permissions-required-for-github-apps.md:295<br/>content/rest/reference/permissions-required-for-github-apps.md:298<br/>content/rest/reference/permissions-required-for-github-apps.md:301<br/>content/rest/reference/permissions-required-for-github-apps.md:304<br/>content/rest/reference/permissions-required-for-github-apps.md:307<br/>content/rest/reference/permissions-required-for-github-apps.md:310<br/>content/rest/reference/permissions-required-for-github-apps.md:313<br/>content/rest/reference/permissions-required-for-github-apps.md:316<br/>content/rest/reference/permissions-required-for-github-apps.md:319<br/>content/rest/reference/permissions-required-for-github-apps.md:322<br/>content/rest/reference/permissions-required-for-github-apps.md:325<br/>content/rest/reference/permissions-required-for-github-apps.md:328<br/>content/rest/reference/permissions-required-for-github-apps.md:331<br/>content/rest/reference/permissions-required-for-github-apps.md:334<br/>content/rest/reference/permissions-required-for-github-apps.md:337<br/>content/rest/reference/permissions-required-for-github-apps.md:340<br/>content/rest/reference/permissions-required-for-github-apps.md:343<br/>content/rest/reference/permissions-required-for-github-apps.md:358<br/>content/rest/reference/permissions-required-for-github-apps.md:373<br/>content/rest/reference/permissions-required-for-github-apps.md:412<br/>content/rest/reference/permissions-required-for-github-apps.md:417<br/>content/rest/reference/permissions-required-for-github-apps.md:444<br/>content/rest/reference/permissions-required-for-github-apps.md:454<br/>content/rest/reference/permissions-required-for-github-apps.md:543<br/>content/rest/reference/permissions-required-for-github-apps.md:565<br/>content/rest/reference/permissions-required-for-github-apps.md:568<br/>content/rest/reference/permissions-required-for-github-apps.md:574<br/>content/rest/reference/permissions-required-for-github-apps.md:578<br/>content/rest/reference/permissions-required-for-github-apps.md:581<br/>content/rest/reference/permissions-required-for-github-apps.md:584<br/>content/rest/reference/permissions-required-for-github-apps.md:587<br/>content/rest/reference/permissions-required-for-github-apps.md:590<br/>content/rest/reference/permissions-required-for-github-apps.md:593<br/>content/rest/reference/permissions-required-for-github-apps.md:628<br/>content/rest/reference/permissions-required-for-github-apps.md:643<br/>content/rest/reference/permissions-required-for-github-apps.md:646<br/>content/rest/reference/permissions-required-for-github-apps.md:649<br/>content/rest/reference/permissions-required-for-github-apps.md:717<br/>content/rest/reference/permissions-required-for-github-apps.md:786<br/>content/rest/reference/permissions-required-for-github-apps.md:910<br/>content/rest/reference/permissions-required-for-github-apps.md:914<br/>content/rest/reference/permissions-required-for-github-apps.md:917<br/>content/rest/reference/permissions-required-for-github-apps.md:921<br/>data/reusables/notifications-v2/custom-notification-types.md:1<br/>```" ]]></description></item><item>	<title>Add notice about limits for inputs` for a `workflow_dispatch` event</title>	<link>https://github.com/github/docs/issues/15710</link>	<description><![CDATA[### Code of Conduct<br/><br/>- [X] I have read and agree to the GitHub Docs project's  <a href="https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> 

<br/><br/>### What article on docs.github.com is affected?<br/><br/>I am trying to configure Github Action with more than 10 `inputs` for a `workflow_dispatch` event and I am getting the  error:<br/><br/>** <a href="https://github.com/Lolo-Health/lolo-infrastructure/actions/runs/1878343346/workflow">Invalid workflow file: .github/workflows/create_feature_branch.yml#L1</a> 

<br/>you may only define up to 10 `inputs` for a `workflow_dispatch` event**<br/><br/>### What changes are you suggesting?<br/><br/>We definitely need to add notice about such limit and increase it<br/><br/>### Additional information<br/><br/>_No response_" ]]></description></item><item>	<title>Dockerfile support</title>	<link>https://github.com/github/licensed/issues/272</link>	<description><![CDATA[Would be great if `licensed` supported analyzing `Dockerfile`s and what is installed there to track all dependencies of a project!" ]]></description></item><item>	<title>Question about tags</title>	<link>https://github.com/github/octocatalog-diff/issues/209</link>	<description><![CDATA[Is there any way to have octocatalog-diff do the opposite of --ignore-tags?  I'd like to be able to specify one or more tags and have octocatalog-diff only compare resources containing those tags?  This would help predict the behavior of running puppet with those tags." ]]></description></item><item>	<title>Turn parallel_tests back on for CI</title>	<link>https://github.com/github/octocatalog-diff/issues/164</link>	<description><![CDATA[Recently the CI for octocatalog-diff has been pretty flaky due to random tests getting killed. From travis CI documents, I concluded that the individual tests may be exhausting resources of the container, and as such in https://github.com/github/octocatalog-diff/pull/161 I disabled the parallel_tests gem for CI. Since then, no problems. :crossed_fingers: But, unfortunately the CI build time per ruby version increased by about 5 minutes (20 to 25)
 as a result of this change.<br/><br/>I'm entering this issue to keep track turning this back on. Things that would probably need to be done here would be to evaluate whether the tests can be effectively parallelized (perhaps the spec tests)
 or if the number of simultaneous processes can be reduced to keep from bumping up against any limits that exist.<br/><br/>Right now nobody is actively working on this (there are higher priorities)
. However if test parallelization is something that interests you and you'd like to have a go at making the CI faster, please comment in the issue! ðŸ˜¸ " ]]></description></item><item>	<title>How to use a different puppet configuration (e.g. strict_variables)
</title>	<link>https://github.com/github/octocatalog-diff/issues/158</link>	<description><![CDATA[Hey, I have set `strict_variables` (https://puppet.com/docs/puppet/4.10/configuration.html#strictvariables)
 to true on the puppetmaster. Now I also want this setting to be there for the octocatalog-diff run. Unfortunately I couldn't figure out how I could do that. The only think I could think of would be to add a bootstrapping script which creates a puppet.conf with that setting. But this doesn't feel right :)
<br/><br/>Does someone has an idea how I could do that?" ]]></description></item><item>	<title>Investigate semantic-rust macro tests</title>	<link>https://github.com/github/semantic/issues/553</link>	<description><![CDATA[@p-alik has graciously added the `semantic-rust` package but we've had to exclude some macro corpus tests due to parsing issues.<br/><br/>See https://github.com/github/semantic/pull/551 for details." ]]></description></item><item>	<title>Build `x86` on Windows with the built-in tools</title>	<link>https://github.com/github/smimesign/issues/91</link>	<description><![CDATA[We build `amd64` directly: https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L89<br/><br/>But I had trouble figuring out how to build for `GOARCH=386` without errors. Right now, we use https://github.com/egor-tensin/setup-mingw to switch to 32-bit builds, which pulls down a bunch of tooling and takes a few minutes:<br/><br/>https://github.com/github/smimesign/blob/e650daf6eaadf85c763fa06dcfb0e4d794d293dc/.github/workflows/build-binaries.yml#L90-L94<br/><br/>I can't help but feel there must still be a nice (or at least much faster)
 way to do this using the built-in tools from Actions." ]]></description></item><item>	<title>Don't connect to kext when invoked with CLI args</title>	<link>https://github.com/github/SoftU2F/issues/39</link>	<description><![CDATA[We try to connect to the kext when the app starts ( <a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a> 

)
. This also happens when the app is launched from the command line (Eg. for deleting/listing registrations)
. If the app is already running in the background we'll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to." ]]></description></item><item>	<title>Super-linter algorithm for finding changed files is broken</title>	<link>https://github.com/github/super-linter/issues/1167</link>	<description><![CDATA[## Describe the bug<br/><br/>`git diff-tree` used by linter on `push` checks only files from the last commit and regardless of files status, so deleted or renamed files are also checked.  <br/><br/>There are now 2 different `git` commands used for finding the list of broken files (find them here: https://github.com/github/super-linter/blob/v3.14.4/lib/functions/buildFileList.sh#L59-L105)
. `git diff-tree` is used on `push`, `git diff` is used otherwise. A separate behaviour for push was added in #905 and follow-up #1049 to fix push to a default branch. But it seems working only in rare special cases: only one commit is pushed and no files are deleted. Otherwise wrong list is reported.<br/><br/>## Expected behavior<br/><br/>All changed non-deleted files from all commits added on top of the default branch should be checked, deleted files should be ignored.<br/><br/>## Steps to Reproduce<br/><br/>Here are the steps to reproduce within git (super-linter is not involved.<br/><br/>Adding first file, everything works fine:<br/>```bash<br/>+ git log --oneline master...465e71b<br/>465e71b (HEAD -> test)
 Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 465e71b<br/>test/test1.txt<br/><br/>+ git diff --name-only master...465e71b --diff-filter=d<br/>test/test1.txt<br/>```<br/><br/>Now adding the second file in a separate commit, `diff git-tree` reports only the last file - only files changed in the last commit:<br/>```bash<br/>+ git log --oneline master...1c3d652<br/>1c3d652 (HEAD -> test)
 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r 1c3d652<br/>test/test2.txt<br/><br/>+ git diff --name-only master...1c3d652 --diff-filter=d<br/>test/test1.txt<br/>test/test2.txt<br/>```<br/><br/>Renaming first file, `git diff-tree` reports again only files from the last commit and as another issue - reports deleted file as well:<br/>```bash<br/>+ git log --oneline master...f5617a2<br/>f5617a2 (HEAD -> test)
 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r f5617a2<br/>test/test1.txt<br/>test/test3.txt<br/><br/>+ git diff --name-only master...f5617a2 --diff-filter=d<br/>test/test2.txt<br/>test/test3.txt<br/>```<br/><br/>Now deleting the second file, `git diff-tree` reports only this deleted file:<br/>```shell<br/>+ git log --oneline master...ee90eaf<br/>ee90eaf (HEAD -> test)
 Remove test2.txt<br/>f5617a2 Rename test1.txt to test3.txt<br/>1c3d652 Add test2.txt<br/>465e71b Add test1.txt<br/><br/>+ git diff-tree --no-commit-id --name-only -r ee90eaf<br/>test/test2.txt<br/><br/>+ git diff --name-only master...ee90eaf --diff-filter=d<br/>test/test3.txt<br/>```<br/><br/>## Additional context<br/><br/>Right now `git diff` command looks better for all cases except finding changes for a push to a `DEFAULT_BRANCH` (the case described in #900)
. I'd say `git diff` should be used instead of the other command, or `git diff-tree` needs to be called with a right list of parameters. <br/><br/>I don't have suggestions on how better to fix the original issue from #900. If there needs to be a special code condition for that case maybe it should be checking not only git `push` event but also if current branch is a `DEFAULT_BRANCH`. <br/><br/>This project really needs testing for the \"get diff files list\" behaviour. It was broken couple of times already. Having wrong files checked is really disappointing. What makes it even more disappointing is that you often don't even realize this. With current broken behaviour wrong files were linted in the last 3 months when `push` event was used. I believe that's quite a lot of people and projects since this setup is recommended by super-linter readme :cry: <br/><br/>Additional tough thing is that it's impossible to debug \"get diff files list\" in local, since `VALIDATE_ALL_CODEBASE=true` behaviour is used in that case. " ]]></description></item><item>	<title>Versioned documentation</title>	<link>https://github.com/github/view_component/issues/1151</link>	<description><![CDATA[## Feature request<br/><br/>As a developer reading the ViewComponent documentation, it is unclear whether there are unreleased features in the docs.<br/><br/>### Motivation<br/><br/>We've seen some issues here and there of folks being mislead by our documentation when unreleased changes were described in the docs. <br/><br/>### Proposed solution<br/><br/>I could see us solving this a couple ways. We could only publish the docs when a release is cut, we could version the docs (see https://glebbahmutov.com/blog/versioned-doc-pages/, or perhaps we could start with a disclaimer that the docs are for the `main` branch." ]]></description></item><item>	<title>Using asset_path in component previews</title>	<link>https://github.com/github/view_component/issues/1093</link>	<description><![CDATA[<!-- If possible, please provide a PR with a failing test for bugs instead of filing an issue. --><br/><br/>### Steps to reproduce<br/>- put `image.png` in `app/assets/images/image.png`<br/>- create an example component that accepts an `image` argument, with a preview file<br/>- in the preview file, add `render ExampleComponent.new(image: image_path(\"image.png\")
`<br/>- this will trigger a `NoMethodError`<br/>- add `include ActionView::Helpers::AssetUrlHelper` at the top of the preview class<br/><br/>```ruby<br/>class ExampleComponent < ApplicationComponent<br/>  def initialize(image:)
<br/>    @image = image<br/>  end<br/><br/>  def call<br/>    image_tag @image<br/>  end<br/>end<br/>```<br/><br/>```ruby<br/>class ExampleComponentPreview < ViewComponent::Preview<br/>  include ActionView::Helpers::AssetUrlHelper<br/><br/>  def default<br/>    render(ExampleComponent.new(image: image_path(\"image.png\")
)
)
<br/>  end<br/>end<br/>```<br/><br/>### Expected behavior<br/>The preview renders the image with path `/assets/image-80b04a6277839296f66f0e7de1fb03a3061322fad2273b18a375bf2f5381c41f.png`.<br/><br/>### Actual behavior<br/>The preview renders but the image path is `/images/image.png`.<br/><br/>### System configuration<br/>**Rails version**: 6.1.4.1<br/><br/>**Ruby version**: 2.7.4<br/><br/>**Gem version**: 2.40.0<br/>" ]]></description></item><item>	<title>depends option test regression</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/613</link>	<description><![CDATA[There's a branch with the --depends option, that lists the needed (or installed)
 dependencies.<br/>This introduced a regression in the tests, so it will not be merged until it's fixed.<br/>If someone wants to have a go at finding the issue the branch is https://github.com/ubuntu/ubuntu-make/tree/list_depends<br/>Closes #610 " ]]></description></item><item>	<title>No CLI parameter to specify installation path directly from command line (unable to use ubuntu-make in chef)
</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/403</link>	<description><![CDATA[Does anyone have a reliable workaround to automatically accept the default installation path when prompted? Specifically for ide eclipse-jee.<br/><br/>I tried using \"yes\", but then it doesn't set the default installation path at all and installs it into the void. \"Expect\" also gets confused, what I need is to set the installation path directly:<br/><br/>umake ide eclipse-jee --path \"/home/vagrant/.local/share/umake/ide/eclipse-jee\"<br/><br/>This would make umake useful in automatic configuration management tools (e.g. chef)
.<br/>" ]]></description></item><item>	<title>Add Racket support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/200</link>	<description><![CDATA[It would be nice if support for Racket and DrRacket would be added. Please consider it, thx :smile: <br/>http://racket-lang.org/<br/>" ]]></description></item><item>	<title>Umake should safely remove all the packages it installed</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/192</link>	<description><![CDATA[When I use the \"-- remove\" argument it does not remove all the packages that were installed. It would be good if \"umake -r\" also removes the redundant packages that it installed.<br/>" ]]></description></item><item>	<title>Add: Lazarus IDE and FPC</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/149</link>	<description><![CDATA[Please, add this great RAD solution. It can compile to different targets and architectures.<br/>The version provided in the USC it is old and conflicts with new versions.<br/>http://www.lazarus-ide.org/<br/>" ]]></description></item><item>	<title>Support for Mono and Mono Develop</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/94</link>	<description><![CDATA[It would be nice if support for Mono and Mono Develop would be added. Please consider it :)
<br/>" ]]></description></item><item>	<title>Add Perl support</title>	<link>https://github.com/ubuntu/ubuntu-make/issues/85</link>	<description><![CDATA[Please also add Perl support via perlbrew/plenv and Padre as IDE.<br/>" ]]></description></item></channel></rss>
